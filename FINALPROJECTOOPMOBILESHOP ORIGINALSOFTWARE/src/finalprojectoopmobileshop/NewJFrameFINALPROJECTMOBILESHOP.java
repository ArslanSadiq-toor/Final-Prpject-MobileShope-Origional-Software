/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package finalprojectoopmobileshop;

import java.awt.print.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.print.PrintException;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Talha
 */
public class NewJFrameFINALPROJECTMOBILESHOP extends javax.swing.JFrame {
Connection conn;
    private Object[][] dataForTableViewAllRecords;
    /**
     * Creates new form NewJFrameFINALPROJECTMOBILESHOP
     */
    public NewJFrameFINALPROJECTMOBILESHOP() {
        initComponents();
        jInternalFrameAddCatagory.setVisible(false);
        jInternalLogin.setVisible(false);
        jInternalFrameMainmenu.setVisible(false);
        jInternalFrameAddCustomer1.setVisible(false);
        jInternalFrameaddpay.setVisible(false);
        jInternalFrameaddEmployee.setVisible(false);
        jInternalFrameaddSupllier.setVisible(false);
        jInternalFrameAddITEM.setVisible(false);
        jInternalFrameAddStock.setVisible(false);
        jInternalFrameINVOICE.setVisible(false);
        jInternalFrameRepairingcustomer.setVisible(false);
        jInternalFrameEmployeeRecord.setVisible(false);
        jInternalFrameviewALLCustomer.setVisible(false);
        jInternalFrameALLSTOCKRECORD.setVisible(false);
        jInternalFrameVIEWSUPPLIERRECORD.setVisible(false);
        jInternalFrameVIEWITEMRECORD.setVisible(false);
        jInternalFrameVIEWALLBILLRECORD.setVisible(false);
        jInternalFrameSIGNUP.setVisible(true);
        jInternalFrameSIGNUP.setBounds(10,10,200,200);
        jInternalFrameVIEWALLBILLRECORD.setBounds(10,10,200,200);
        jInternalFrameVIEWITEMRECORD.setBounds(10,10,200,200);
        jInternalFrameVIEWSUPPLIERRECORD.setBounds(10,10,200,200);
        jInternalFrameMainmenu.setBounds(10,10,200,200);
        jInternalFrameAddCatagory.setBounds(10,10,200,200);
        jInternalLogin.setBounds(10,10,200,200);
        jInternalFrameAddCustomer1.setBounds(10,10,200,200);
        jInternalFrameaddpay.setBounds(10,10,200,200);
        jInternalFrameaddEmployee.setBounds(10,10,200,200);
        jInternalFrameaddSupllier.setBounds(10,10,200,200);
        jInternalFrameAddITEM.setBounds(10,10,200,200);
        jInternalFrameviewALLCustomer.setBounds(10,10,200,200);
        jInternalFrameAddStock.setBounds(10,10,200,200);
        jInternalFrameINVOICE.setBounds(10,10,200,200);
        jInternalFrameRepairingcustomer.setBounds(10,10,200,200);
        jInternalFrameEmployeeRecord.setBounds(10,10,200,200);
        jInternalFrameALLSTOCKRECORD.setBounds(10,10,200,200);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jInternalLogin = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldusername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonLogin = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxnormalAdmin = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jButtonSIGNUPLOGIN = new javax.swing.JButton();
        jTextFieldpassword = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jInternalFrameMainmenu = new javax.swing.JInternalFrame();
        jLabel6 = new javax.swing.JLabel();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu14 = new javax.swing.JMenu();
        jMenuItemaddcatogory2 = new javax.swing.JMenuItem();
        jMenuItemaddCustomer2 = new javax.swing.JMenuItem();
        jMenuItemaddEmployee2 = new javax.swing.JMenuItem();
        jMenuItemAddStock2 = new javax.swing.JMenuItem();
        jMenuItemAddsuplier2 = new javax.swing.JMenuItem();
        jMenu15 = new javax.swing.JMenu();
        jMenuItemDetails2 = new javax.swing.JMenuItem();
        jMenu16 = new javax.swing.JMenu();
        jMenuItemcreateBill2 = new javax.swing.JMenuItem();
        jMenu17 = new javax.swing.JMenu();
        jMenuItemREpairingDetails2 = new javax.swing.JMenuItem();
        jMenu18 = new javax.swing.JMenu();
        jMenuItemPayDetails4 = new javax.swing.JMenuItem();
        jMenu19 = new javax.swing.JMenu();
        jMenuItemviewcustomerallrecord2 = new javax.swing.JMenuItem();
        jMenuItemviewStockallrecord3 = new javax.swing.JMenuItem();
        jMenuItemviewItemallrecord4 = new javax.swing.JMenuItem();
        jMenuItemviewInvoiceallrecord5 = new javax.swing.JMenuItem();
        jMenuItemviewSupplierrallrecord6 = new javax.swing.JMenuItem();
        jMenuItemviewEmployeeallrecord7 = new javax.swing.JMenuItem();
        jMenu20 = new javax.swing.JMenu();
        jMenuItemPayDetails5 = new javax.swing.JMenuItem();
        jInternalFrameAddCustomer1 = new javax.swing.JInternalFrame();
        jLabeladdCustomer = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextFieldcustomerID = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldCustomerName = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTextFieldContactNo = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldCity = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTextFieldcustomerItemID = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jComboBoxsearchcustomer = new javax.swing.JComboBox();
        jButtonsearchCustomer = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jTextFieldsearchCustomer = new javax.swing.JTextField();
        jButtonUpdateCustomer = new javax.swing.JButton();
        jButtondeleteCustomer = new javax.swing.JButton();
        jButtonaddCustomer = new javax.swing.JButton();
        jButtonBackMenu = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTablecustomerTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaaddresscustomer = new javax.swing.JTextArea();
        jInternalFrameaddpay = new javax.swing.JInternalFrame();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jTextFieldTiltle = new javax.swing.JTextField();
        jTextFieldSlary = new javax.swing.JTextField();
        jButtondeletepay = new javax.swing.JButton();
        jButtonaddpay = new javax.swing.JButton();
        jButtonupdatepay = new javax.swing.JButton();
        jButtonbackpay = new javax.swing.JButton();
        jButtonsearchPay = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jTextFieldsearchby = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jComboBoxsearchbypay = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablepayTABLE = new javax.swing.JTable();
        jLabelempoloyeePay = new javax.swing.JLabel();
        jInternalFrameAddCatagory = new javax.swing.JInternalFrame();
        jLabel20 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jTextFieldCatagoryID = new javax.swing.JTextField();
        jTextFieldCatagoryName = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jComboBoxSearchCatagory = new javax.swing.JComboBox();
        jLabelsearch = new javax.swing.JLabel();
        jTextFieldEnterCIDCNAME = new javax.swing.JTextField();
        jButtonsearchCatagory = new javax.swing.JButton();
        jButtondeletecatagory = new javax.swing.JButton();
        jButtonaddcatagory = new javax.swing.JButton();
        jButtonupdatecatagory = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableaddCatagoryTable = new javax.swing.JTable();
        jButtonbackmenu = new javax.swing.JButton();
        jInternalFrameaddEmployee = new javax.swing.JInternalFrame();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jTextFieldemployeeID = new javax.swing.JTextField();
        jTextFieldEmpoyeeName = new javax.swing.JTextField();
        jLabel78 = new javax.swing.JLabel();
        jTextFieldEmployeeConatct = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jTextFieldEmployeeEmail = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jTextFieldTitle = new javax.swing.JTextField();
        jLabel83 = new javax.swing.JLabel();
        jTextFieldEmployeeCity = new javax.swing.JTextField();
        jLabel84 = new javax.swing.JLabel();
        jTextFieldsearchtxt = new javax.swing.JTextField();
        jLabel85 = new javax.swing.JLabel();
        jComboBoxsearchemployee = new javax.swing.JComboBox();
        jButtonsearchEmployee1 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTableaddEmployee = new javax.swing.JTable();
        jButtondeleteEmployee1 = new javax.swing.JButton();
        jButtonaddemployee1 = new javax.swing.JButton();
        jButtonback1 = new javax.swing.JButton();
        jButtonUpdateemployee1 = new javax.swing.JButton();
        jComboBoxgender = new javax.swing.JComboBox();
        jInternalFrameaddSupllier = new javax.swing.JInternalFrame();
        jLabel86 = new javax.swing.JLabel();
        jTextFieldsupplierID1 = new javax.swing.JTextField();
        jLabel87 = new javax.swing.JLabel();
        jTextFieldSupplierName1 = new javax.swing.JTextField();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jTextFieldsupplierContactNo1 = new javax.swing.JTextField();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jComboBoxgenderSuplier1 = new javax.swing.JComboBox();
        jLabel4searchby1 = new javax.swing.JLabel();
        jComboBoxsupplier = new javax.swing.JComboBox();
        jLabel92 = new javax.swing.JLabel();
        jTextFieldsearchsuppliercmbo1 = new javax.swing.JTextField();
        jButtonsearchSupplier1 = new javax.swing.JButton();
        jButtonupdateSupplier1 = new javax.swing.JButton();
        jButtonbackMainu1 = new javax.swing.JButton();
        jButtonDeleteSupplier1 = new javax.swing.JButton();
        jButtonaddSupplier1 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTableSupplierTable1 = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTextAreaAddressSupplier1 = new javax.swing.JTextArea();
        jInternalFrameAddStock = new javax.swing.JInternalFrame();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        jTextFieldstockID1 = new javax.swing.JTextField();
        jTextFieldstockName1 = new javax.swing.JTextField();
        jLabel95 = new javax.swing.JLabel();
        jTextFieldquantitystock1 = new javax.swing.JTextField();
        jLabel96 = new javax.swing.JLabel();
        jTextFieldstockprice1 = new javax.swing.JTextField();
        jLabel97 = new javax.swing.JLabel();
        jTextFieldStockItemName1 = new javax.swing.JTextField();
        jLabel98 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        jTextFieldsearctxt1 = new javax.swing.JTextField();
        jLabel100 = new javax.swing.JLabel();
        jComboBoxsarchstock1 = new javax.swing.JComboBox();
        jButtonsearchStock1 = new javax.swing.JButton();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTableStockTable1 = new javax.swing.JTable();
        jButtonAddStock1 = new javax.swing.JButton();
        jButtonDeleteStock1 = new javax.swing.JButton();
        jButtonbackmainmenu1 = new javax.swing.JButton();
        jButtonUpdateStock1 = new javax.swing.JButton();
        jInternalFrameAddITEM = new javax.swing.JInternalFrame();
        jLabel101 = new javax.swing.JLabel();
        jTextFieldItemID1 = new javax.swing.JTextField();
        jLabel102 = new javax.swing.JLabel();
        jTextFieldItemName1 = new javax.swing.JTextField();
        jLabel103 = new javax.swing.JLabel();
        jTextFieldItemPrice1 = new javax.swing.JTextField();
        jLabel104 = new javax.swing.JLabel();
        jTextFielditemQuantity1 = new javax.swing.JTextField();
        jLabel105 = new javax.swing.JLabel();
        jTextFieldcatagoryIDItem1 = new javax.swing.JTextField();
        jLabel106 = new javax.swing.JLabel();
        jTextFieldSupplierIDItem1 = new javax.swing.JTextField();
        jLabel107 = new javax.swing.JLabel();
        jTextFieldsearchcmbofield1 = new javax.swing.JTextField();
        jLabel108 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jButtonAddItem1 = new javax.swing.JButton();
        jButtonsearchItem1 = new javax.swing.JButton();
        jButtonbackMAINMENU1 = new javax.swing.JButton();
        jButtonDeleteItem1 = new javax.swing.JButton();
        jButtonUpdateItem1 = new javax.swing.JButton();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTableItemTABLE1 = new javax.swing.JTable();
        jLabel109 = new javax.swing.JLabel();
        jInternalFrameINVOICE = new javax.swing.JInternalFrame();
        jLabel110 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jTextFieldinvoiceNo = new javax.swing.JTextField();
        jLabel112 = new javax.swing.JLabel();
        jTextFieldDate = new javax.swing.JTextField();
        jLabel115 = new javax.swing.JLabel();
        jTextFieldcustomerNAME = new javax.swing.JTextField();
        jLabel116 = new javax.swing.JLabel();
        jTextFieldOTEMNAME = new javax.swing.JTextField();
        jLabel117 = new javax.swing.JLabel();
        jTextFieldPricePERUnit = new javax.swing.JTextField();
        jLabel118 = new javax.swing.JLabel();
        jTextFieldQuantity = new javax.swing.JTextField();
        jLabel119 = new javax.swing.JLabel();
        jTextFieldTotalPrice = new javax.swing.JTextField();
        jButtonprintinvoice1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane19 = new javax.swing.JScrollPane();
        jTextAreaprint = new javax.swing.JTextArea();
        jInternalFrameRepairingcustomer = new javax.swing.JInternalFrame();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldreparingID = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldCATAGORY = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldCUSTOMERNAME = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldprice = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldsearchReapring = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jComboBoxselectsearchreparing = new javax.swing.JComboBox();
        jButtonSEARCHREAPRINGCUSTOMER = new javax.swing.JButton();
        jButtonaddreparingCustomer = new javax.swing.JButton();
        jButtondeletecustomer = new javax.swing.JButton();
        jButtonupdaterepairing = new javax.swing.JButton();
        jButtonbackReparing = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTablereparingTABLE = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaREPDETAILS = new javax.swing.JTextArea();
        jComboBoxreadypending = new javax.swing.JComboBox();
        jInternalFrameviewALLCustomer = new javax.swing.JInternalFrame();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableviewALLCustomer = new javax.swing.JTable();
        jLabelcustomerRecord = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jInternalFrameEmployeeRecord = new javax.swing.JInternalFrame();
        jLabelEMployeeRecord = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableVIEWALLEMPLOYEETABLE = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jInternalFrameVIEWSUPPLIERRECORD = new javax.swing.JInternalFrame();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTableVIEWALLESUPPLIER = new javax.swing.JTable();
        jLabelSupplierRecord = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jInternalFrameALLSTOCKRECORD = new javax.swing.JInternalFrame();
        jLabelStockRecord = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTableVIEWALLSTOCK = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jInternalFrameVIEWITEMRECORD = new javax.swing.JInternalFrame();
        jLabelItemrecord = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTableVIEWALLITEM = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jInternalFrameVIEWALLBILLRECORD = new javax.swing.JInternalFrame();
        jLabelbillRecord = new javax.swing.JLabel();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTableVIEWALLBillRECORD = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jInternalFrameSIGNUP = new javax.swing.JInternalFrame();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jTextFieldEnterName = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jComboBoxSelectNormalAdmin = new javax.swing.JComboBox();
        jButtonSIGNUP = new javax.swing.JButton();
        jButtonSIGNIN = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jTextFieldpasswordsignup = new javax.swing.JPasswordField();
        jTextFieldcnfrmPasswordSignup = new javax.swing.JPasswordField();
        jLabel43 = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalLogin.setClosable(true);
        jInternalLogin.setMaximizable(true);
        jInternalLogin.setResizable(true);
        jInternalLogin.setTitle("MobileShopManagmentSystem");
        jInternalLogin.setVisible(true);
        jInternalLogin.getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Username");
        jInternalLogin.getContentPane().add(jLabel1);
        jLabel1.setBounds(340, 210, 100, 20);

        jTextFieldusername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldusername.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextFieldusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldusernameActionPerformed(evt);
            }
        });
        jTextFieldusername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldusernameKeyPressed(evt);
            }
        });
        jInternalLogin.getContentPane().add(jTextFieldusername);
        jTextFieldusername.setBounds(530, 210, 140, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Password");
        jInternalLogin.getContentPane().add(jLabel3);
        jLabel3.setBounds(340, 290, 90, 22);

        jButtonLogin.setBackground(new java.awt.Color(153, 255, 255));
        jButtonLogin.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonLogin.setText("Login");
        jButtonLogin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButtonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoginActionPerformed(evt);
            }
        });
        jInternalLogin.getContentPane().add(jButtonLogin);
        jButtonLogin.setBounds(330, 440, 110, 50);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("UserType");
        jInternalLogin.getContentPane().add(jLabel4);
        jLabel4.setBounds(340, 360, 80, 23);

        jComboBoxnormalAdmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBoxnormalAdmin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Admin" }));
        jComboBoxnormalAdmin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jComboBoxnormalAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxnormalAdminActionPerformed(evt);
            }
        });
        jComboBoxnormalAdmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxnormalAdminKeyPressed(evt);
            }
        });
        jInternalLogin.getContentPane().add(jComboBoxnormalAdmin);
        jComboBoxnormalAdmin.setBounds(530, 350, 140, 30);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/finalprojectoopmobileshop/1-SDF.jpg"))); // NOI18N
        jInternalLogin.getContentPane().add(jLabel5);
        jLabel5.setBounds(-10, -140, 800, 120);

        jButtonSIGNUPLOGIN.setBackground(new java.awt.Color(153, 255, 255));
        jButtonSIGNUPLOGIN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonSIGNUPLOGIN.setText("SignUp");
        jButtonSIGNUPLOGIN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButtonSIGNUPLOGIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSIGNUPLOGINActionPerformed(evt);
            }
        });
        jInternalLogin.getContentPane().add(jButtonSIGNUPLOGIN);
        jButtonSIGNUPLOGIN.setBounds(630, 440, 110, 50);

        jTextFieldpassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextFieldpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldpasswordActionPerformed(evt);
            }
        });
        jTextFieldpassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldpasswordKeyPressed(evt);
            }
        });
        jInternalLogin.getContentPane().add(jTextFieldpassword);
        jTextFieldpassword.setBounds(530, 280, 140, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/finalprojectoopmobileshop/1-SDF.jpg"))); // NOI18N
        jInternalLogin.getContentPane().add(jLabel2);
        jLabel2.setBounds(-80, -60, 1500, 1620);

        jInternalFrameMainmenu.setClosable(true);
        jInternalFrameMainmenu.setMaximizable(true);
        jInternalFrameMainmenu.setResizable(true);
        jInternalFrameMainmenu.setTitle("MAIN MENU");
        jInternalFrameMainmenu.setVisible(true);
        jInternalFrameMainmenu.getContentPane().setLayout(null);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/finalprojectoopmobileshop/IMG-20190112-WA0014.jpg"))); // NOI18N
        jInternalFrameMainmenu.getContentPane().add(jLabel6);
        jLabel6.setBounds(0, 0, 1410, 670);

        jMenu14.setBackground(new java.awt.Color(0, 0, 0));
        jMenu14.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jMenu14.setText("Master Entity");

        jMenuItemaddcatogory2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemaddcatogory2.setText("Add Catagory");
        jMenuItemaddcatogory2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemaddcatogory2ActionPerformed(evt);
            }
        });
        jMenu14.add(jMenuItemaddcatogory2);

        jMenuItemaddCustomer2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemaddCustomer2.setText("Add Customer");
        jMenuItemaddCustomer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemaddCustomer2ActionPerformed(evt);
            }
        });
        jMenu14.add(jMenuItemaddCustomer2);

        jMenuItemaddEmployee2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemaddEmployee2.setText("Add Employee");
        jMenuItemaddEmployee2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemaddEmployee2ActionPerformed(evt);
            }
        });
        jMenu14.add(jMenuItemaddEmployee2);

        jMenuItemAddStock2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemAddStock2.setText("Add Stock");
        jMenuItemAddStock2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAddStock2ActionPerformed(evt);
            }
        });
        jMenu14.add(jMenuItemAddStock2);

        jMenuItemAddsuplier2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemAddsuplier2.setText("Add Supplier");
        jMenuItemAddsuplier2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAddsuplier2ActionPerformed(evt);
            }
        });
        jMenu14.add(jMenuItemAddsuplier2);

        jMenuBar3.add(jMenu14);

        jMenu15.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jMenu15.setText("Item");

        jMenuItemDetails2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemDetails2.setText("Item Details");
        jMenuItemDetails2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDetails2ActionPerformed(evt);
            }
        });
        jMenu15.add(jMenuItemDetails2);

        jMenuBar3.add(jMenu15);

        jMenu16.setText("Invoice");

        jMenuItemcreateBill2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemcreateBill2.setText("Create Bill");
        jMenuItemcreateBill2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemcreateBill2ActionPerformed(evt);
            }
        });
        jMenu16.add(jMenuItemcreateBill2);

        jMenuBar3.add(jMenu16);

        jMenu17.setText("Repairing");

        jMenuItemREpairingDetails2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemREpairingDetails2.setText("Reparing Details");
        jMenuItemREpairingDetails2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemREpairingDetails2ActionPerformed(evt);
            }
        });
        jMenu17.add(jMenuItemREpairingDetails2);

        jMenuBar3.add(jMenu17);

        jMenu18.setText("Pay");

        jMenuItemPayDetails4.setText("Pay Details");
        jMenuItemPayDetails4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPayDetails4ActionPerformed(evt);
            }
        });
        jMenu18.add(jMenuItemPayDetails4);

        jMenuBar3.add(jMenu18);

        jMenu19.setText("Reports");

        jMenuItemviewcustomerallrecord2.setText("ViewCustomerRecord");
        jMenuItemviewcustomerallrecord2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemviewcustomerallrecord2ActionPerformed(evt);
            }
        });
        jMenu19.add(jMenuItemviewcustomerallrecord2);

        jMenuItemviewStockallrecord3.setText("ViewStockRecord");
        jMenuItemviewStockallrecord3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemviewStockallrecord3ActionPerformed(evt);
            }
        });
        jMenu19.add(jMenuItemviewStockallrecord3);

        jMenuItemviewItemallrecord4.setText("ViewItemRecord");
        jMenuItemviewItemallrecord4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemviewItemallrecord4ActionPerformed(evt);
            }
        });
        jMenu19.add(jMenuItemviewItemallrecord4);

        jMenuItemviewInvoiceallrecord5.setText("ViewInvoiceRecord");
        jMenuItemviewInvoiceallrecord5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemviewInvoiceallrecord5ActionPerformed(evt);
            }
        });
        jMenu19.add(jMenuItemviewInvoiceallrecord5);

        jMenuItemviewSupplierrallrecord6.setText("ViewSupplierRecord");
        jMenuItemviewSupplierrallrecord6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemviewSupplierrallrecord6ActionPerformed(evt);
            }
        });
        jMenu19.add(jMenuItemviewSupplierrallrecord6);

        jMenuItemviewEmployeeallrecord7.setText("ViewEmployeeRecord");
        jMenuItemviewEmployeeallrecord7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemviewEmployeeallrecord7ActionPerformed(evt);
            }
        });
        jMenu19.add(jMenuItemviewEmployeeallrecord7);

        jMenuBar3.add(jMenu19);

        jMenu20.setText("Settings");

        jMenuItemPayDetails5.setText("Logout");
        jMenuItemPayDetails5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPayDetails5ActionPerformed(evt);
            }
        });
        jMenu20.add(jMenuItemPayDetails5);

        jMenuBar3.add(jMenu20);

        jInternalFrameMainmenu.setJMenuBar(jMenuBar3);

        jInternalFrameAddCustomer1.setClosable(true);
        jInternalFrameAddCustomer1.setMaximizable(true);
        jInternalFrameAddCustomer1.setResizable(true);
        jInternalFrameAddCustomer1.setTitle("ADD CUSTOMER");
        jInternalFrameAddCustomer1.setVisible(true);

        jLabeladdCustomer.setBackground(new java.awt.Color(0, 0, 204));
        jLabeladdCustomer.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabeladdCustomer.setForeground(new java.awt.Color(0, 0, 204));
        jLabeladdCustomer.setText("                                  ADD CUSTOMER");
        jLabeladdCustomer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("CustomerID");

        jTextFieldcustomerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldcustomerIDActionPerformed(evt);
            }
        });
        jTextFieldcustomerID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldcustomerIDKeyPressed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Customer Name");

        jTextFieldCustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCustomerNameActionPerformed(evt);
            }
        });
        jTextFieldCustomerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCustomerNameKeyPressed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Address");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("ContactNo");

        jTextFieldContactNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldContactNoKeyPressed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("City");

        jTextFieldCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCityKeyPressed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Email");

        jTextFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmailActionPerformed(evt);
            }
        });
        jTextFieldEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEmailKeyPressed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("ItemID");

        jTextFieldcustomerItemID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldcustomerItemIDKeyPressed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("Search by");

        jComboBoxsearchcustomer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CustomerID", "Customer_Name", "C_Address", "ContactNo", "City", "Email", "ItemID" }));
        jComboBoxsearchcustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxsearchcustomerActionPerformed(evt);
            }
        });
        jComboBoxsearchcustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxsearchcustomerKeyPressed(evt);
            }
        });

        jButtonsearchCustomer.setBackground(new java.awt.Color(153, 255, 255));
        jButtonsearchCustomer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonsearchCustomer.setText("Search");
        jButtonsearchCustomer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonsearchCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonsearchCustomerActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText("Enter ");

        jTextFieldsearchCustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldsearchCustomerKeyPressed(evt);
            }
        });

        jButtonUpdateCustomer.setBackground(new java.awt.Color(153, 255, 255));
        jButtonUpdateCustomer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonUpdateCustomer.setText("Update");
        jButtonUpdateCustomer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonUpdateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateCustomerActionPerformed(evt);
            }
        });

        jButtondeleteCustomer.setBackground(new java.awt.Color(153, 255, 255));
        jButtondeleteCustomer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtondeleteCustomer.setText("Delete");
        jButtondeleteCustomer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtondeleteCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtondeleteCustomerActionPerformed(evt);
            }
        });

        jButtonaddCustomer.setBackground(new java.awt.Color(153, 255, 255));
        jButtonaddCustomer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonaddCustomer.setText("Add");
        jButtonaddCustomer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonaddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonaddCustomerActionPerformed(evt);
            }
        });

        jButtonBackMenu.setBackground(new java.awt.Color(153, 255, 255));
        jButtonBackMenu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonBackMenu.setText("Back");
        jButtonBackMenu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonBackMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackMenuActionPerformed(evt);
            }
        });

        jTablecustomerTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jTablecustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CustomerID", "Name", "Address", "ContactNo", "City", "Email", "ItemID"
            }
        ));
        jScrollPane4.setViewportView(jTablecustomerTable);

        jTextAreaaddresscustomer.setColumns(20);
        jTextAreaaddresscustomer.setRows(5);
        jTextAreaaddresscustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaaddresscustomerKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTextAreaaddresscustomer);

        javax.swing.GroupLayout jInternalFrameAddCustomer1Layout = new javax.swing.GroupLayout(jInternalFrameAddCustomer1.getContentPane());
        jInternalFrameAddCustomer1.getContentPane().setLayout(jInternalFrameAddCustomer1Layout);
        jInternalFrameAddCustomer1Layout.setHorizontalGroup(
            jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabeladdCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jInternalFrameAddCustomer1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAddCustomer1Layout.createSequentialGroup()
                        .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldcustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jInternalFrameAddCustomer1Layout.createSequentialGroup()
                            .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButtondeleteCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonaddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonUpdateCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonBackMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(124, 124, 124))
                        .addGroup(jInternalFrameAddCustomer1Layout.createSequentialGroup()
                            .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameAddCustomer1Layout.createSequentialGroup()
                                    .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel24)
                                        .addComponent(jLabel25)
                                        .addComponent(jLabel23)
                                        .addComponent(jLabel22))
                                    .addGap(38, 38, 38))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameAddCustomer1Layout.createSequentialGroup()
                                    .addComponent(jLabel21)
                                    .addGap(56, 56, 56)))
                            .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldContactNo)
                                .addComponent(jTextFieldCity)
                                .addComponent(jTextFieldEmail)
                                .addComponent(jTextFieldcustomerItemID, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 966, Short.MAX_VALUE)
                    .addGroup(jInternalFrameAddCustomer1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameAddCustomer1Layout.createSequentialGroup()
                                .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jInternalFrameAddCustomer1Layout.createSequentialGroup()
                                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrameAddCustomer1Layout.createSequentialGroup()
                                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)))
                                .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldsearchCustomer)
                                    .addComponent(jComboBoxsearchcustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(59, 59, 59))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameAddCustomer1Layout.createSequentialGroup()
                                .addComponent(jButtonsearchCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(146, 146, 146))))))
        );
        jInternalFrameAddCustomer1Layout.setVerticalGroup(
            jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameAddCustomer1Layout.createSequentialGroup()
                .addComponent(jLabeladdCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAddCustomer1Layout.createSequentialGroup()
                        .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(jComboBoxsearchcustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldsearchCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonsearchCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel21))
                    .addGroup(jInternalFrameAddCustomer1Layout.createSequentialGroup()
                        .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jTextFieldcustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jTextFieldCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAddCustomer1Layout.createSequentialGroup()
                        .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrameAddCustomer1Layout.createSequentialGroup()
                                .addComponent(jTextFieldContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrameAddCustomer1Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel23)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel24)))
                        .addGap(13, 13, 13)
                        .addGroup(jInternalFrameAddCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldcustomerItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addGap(65, 65, 65)
                        .addComponent(jButtonaddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtondeleteCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonUpdateCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonBackMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 819, Short.MAX_VALUE))
                .addContainerGap())
        );

        jInternalFrameaddpay.setClosable(true);
        jInternalFrameaddpay.setMaximizable(true);
        jInternalFrameaddpay.setTitle("PAY");
        jInternalFrameaddpay.setVisible(true);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("Title");

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText("Salary");

        jTextFieldTiltle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldTiltleKeyPressed(evt);
            }
        });

        jTextFieldSlary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldSlaryKeyPressed(evt);
            }
        });

        jButtondeletepay.setBackground(new java.awt.Color(153, 255, 255));
        jButtondeletepay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtondeletepay.setText("Delete");
        jButtondeletepay.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtondeletepay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtondeletepayActionPerformed(evt);
            }
        });

        jButtonaddpay.setBackground(new java.awt.Color(153, 255, 255));
        jButtonaddpay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonaddpay.setText("Add");
        jButtonaddpay.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonaddpay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonaddpayActionPerformed(evt);
            }
        });

        jButtonupdatepay.setBackground(new java.awt.Color(153, 255, 255));
        jButtonupdatepay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonupdatepay.setText("Update");
        jButtonupdatepay.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonupdatepay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonupdatepayActionPerformed(evt);
            }
        });

        jButtonbackpay.setBackground(new java.awt.Color(153, 255, 255));
        jButtonbackpay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonbackpay.setText("Back");
        jButtonbackpay.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonbackpay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonbackpayActionPerformed(evt);
            }
        });

        jButtonsearchPay.setBackground(new java.awt.Color(153, 255, 255));
        jButtonsearchPay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonsearchPay.setText("Search");
        jButtonsearchPay.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonsearchPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonsearchPayActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setText("Enter ");

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setText("Search by");

        jComboBoxsearchbypay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Title" }));
        jComboBoxsearchbypay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxsearchbypayActionPerformed(evt);
            }
        });

        jTablepayTABLE.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTablepayTABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Salary"
            }
        ));
        jScrollPane2.setViewportView(jTablepayTABLE);

        jLabelempoloyeePay.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabelempoloyeePay.setForeground(new java.awt.Color(0, 0, 204));
        jLabelempoloyeePay.setText("                            EMPLOYEE PAY");
        jLabelempoloyeePay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jInternalFrameaddpayLayout = new javax.swing.GroupLayout(jInternalFrameaddpay.getContentPane());
        jInternalFrameaddpay.getContentPane().setLayout(jInternalFrameaddpayLayout);
        jInternalFrameaddpayLayout.setHorizontalGroup(
            jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelempoloyeePay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jInternalFrameaddpayLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameaddpayLayout.createSequentialGroup()
                        .addGroup(jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldTiltle)
                            .addComponent(jTextFieldSlary, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameaddpayLayout.createSequentialGroup()
                                .addGroup(jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45)
                                .addGroup(jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldsearchby)
                                    .addComponent(jComboBoxsearchbypay, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(91, 91, 91))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameaddpayLayout.createSequentialGroup()
                                .addComponent(jButtonsearchPay, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(154, 154, 154))))
                    .addGroup(jInternalFrameaddpayLayout.createSequentialGroup()
                        .addGroup(jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonaddpay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtondeletepay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonupdatepay, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addComponent(jButtonbackpay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 965, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jInternalFrameaddpayLayout.setVerticalGroup(
            jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameaddpayLayout.createSequentialGroup()
                .addComponent(jLabelempoloyeePay, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameaddpayLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxsearchbypay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30)
                            .addComponent(jTextFieldsearchby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonsearchPay, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE))
                    .addGroup(jInternalFrameaddpayLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(jTextFieldTiltle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameaddpayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(jTextFieldSlary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67)
                        .addComponent(jButtonaddpay, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtondeletepay, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonupdatepay, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonbackpay, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(361, Short.MAX_VALUE))))
        );

        jInternalFrameAddCatagory.setClosable(true);
        jInternalFrameAddCatagory.setMaximizable(true);
        jInternalFrameAddCatagory.setResizable(true);
        jInternalFrameAddCatagory.setTitle("Catagory");
        jInternalFrameAddCatagory.setVisible(true);

        jLabel20.setBackground(new java.awt.Color(204, 0, 0));
        jLabel20.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 51, 204));
        jLabel20.setText("                                   ADD CATAGORY");
        jLabel20.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel20.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel73.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel73.setText("Catagory ID");

        jTextFieldCatagoryID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCatagoryIDKeyPressed(evt);
            }
        });

        jTextFieldCatagoryName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCatagoryNameKeyPressed(evt);
            }
        });

        jLabel74.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel74.setText("Catagory Name");

        jLabel75.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel75.setText("Search By");

        jComboBoxSearchCatagory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CatagoryID", "Catagory_Name" }));
        jComboBoxSearchCatagory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchCatagoryActionPerformed(evt);
            }
        });
        jComboBoxSearchCatagory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxSearchCatagoryKeyPressed(evt);
            }
        });

        jLabelsearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelsearch.setText("Enter ");

        jTextFieldEnterCIDCNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEnterCIDCNAMEActionPerformed(evt);
            }
        });
        jTextFieldEnterCIDCNAME.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEnterCIDCNAMEKeyPressed(evt);
            }
        });

        jButtonsearchCatagory.setBackground(new java.awt.Color(153, 255, 255));
        jButtonsearchCatagory.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonsearchCatagory.setText("Search");
        jButtonsearchCatagory.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonsearchCatagory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonsearchCatagoryActionPerformed(evt);
            }
        });

        jButtondeletecatagory.setBackground(new java.awt.Color(153, 255, 255));
        jButtondeletecatagory.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtondeletecatagory.setText("Delete");
        jButtondeletecatagory.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtondeletecatagory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtondeletecatagoryActionPerformed(evt);
            }
        });

        jButtonaddcatagory.setBackground(new java.awt.Color(153, 255, 255));
        jButtonaddcatagory.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonaddcatagory.setText("Add");
        jButtonaddcatagory.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonaddcatagory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonaddcatagoryActionPerformed(evt);
            }
        });

        jButtonupdatecatagory.setBackground(new java.awt.Color(153, 255, 255));
        jButtonupdatecatagory.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonupdatecatagory.setText("Update");
        jButtonupdatecatagory.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonupdatecatagory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonupdatecatagoryActionPerformed(evt);
            }
        });

        jTableaddCatagoryTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jTableaddCatagoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CatagoryID", "CatagoryName"
            }
        ));
        jScrollPane3.setViewportView(jTableaddCatagoryTable);

        jButtonbackmenu.setBackground(new java.awt.Color(153, 255, 255));
        jButtonbackmenu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonbackmenu.setText("Back");
        jButtonbackmenu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonbackmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonbackmenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameAddCatagoryLayout = new javax.swing.GroupLayout(jInternalFrameAddCatagory.getContentPane());
        jInternalFrameAddCatagory.getContentPane().setLayout(jInternalFrameAddCatagoryLayout);
        jInternalFrameAddCatagoryLayout.setHorizontalGroup(
            jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameAddCatagoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 1183, Short.MAX_VALUE))
            .addGroup(jInternalFrameAddCatagoryLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonaddcatagory, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtondeletecatagory, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonupdatecatagory, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonbackmenu, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel73, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel74)))
                .addGroup(jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAddCatagoryLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldCatagoryID)
                            .addComponent(jTextFieldCatagoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameAddCatagoryLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonsearchCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47))
                            .addGroup(jInternalFrameAddCatagoryLayout.createSequentialGroup()
                                .addGroup(jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelsearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldEnterCIDCNAME)
                                    .addComponent(jComboBoxSearchCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(98, 98, 98))
                    .addGroup(jInternalFrameAddCatagoryLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane3)
                        .addGap(2, 2, 2))))
        );
        jInternalFrameAddCatagoryLayout.setVerticalGroup(
            jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameAddCatagoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addGroup(jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAddCatagoryLayout.createSequentialGroup()
                        .addGroup(jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel73)
                            .addComponent(jTextFieldCatagoryID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel74)
                            .addComponent(jTextFieldCatagoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jInternalFrameAddCatagoryLayout.createSequentialGroup()
                        .addGroup(jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel75)
                            .addComponent(jComboBoxSearchCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelsearch)
                            .addComponent(jTextFieldEnterCIDCNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonsearchCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jInternalFrameAddCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAddCatagoryLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jButtonaddcatagory, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButtondeletecatagory, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButtonupdatecatagory, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jButtonbackmenu, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jInternalFrameAddCatagoryLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE))))
        );

        jInternalFrameaddEmployee.setClosable(true);
        jInternalFrameaddEmployee.setMaximizable(true);
        jInternalFrameaddEmployee.setResizable(true);
        jInternalFrameaddEmployee.setTitle("ADD EMPLOYEE");
        jInternalFrameaddEmployee.setVisible(true);

        jLabel76.setBackground(new java.awt.Color(0, 0, 255));
        jLabel76.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        jLabel76.setForeground(new java.awt.Color(0, 0, 204));
        jLabel76.setText("                                ADD EMPLOYEE");
        jLabel76.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel77.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel77.setText("EmployeeID");

        jTextFieldemployeeID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldemployeeIDKeyPressed(evt);
            }
        });

        jTextFieldEmpoyeeName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEmpoyeeNameKeyPressed(evt);
            }
        });

        jLabel78.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel78.setText("Name");

        jTextFieldEmployeeConatct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEmployeeConatctKeyPressed(evt);
            }
        });

        jLabel79.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel79.setText("ContactNo");

        jLabel80.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel80.setText("City");

        jTextFieldEmployeeEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmployeeEmailActionPerformed(evt);
            }
        });
        jTextFieldEmployeeEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEmployeeEmailKeyPressed(evt);
            }
        });

        jLabel81.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel81.setText("Email");

        jLabel82.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel82.setText("Gender");

        jTextFieldTitle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldTitleKeyPressed(evt);
            }
        });

        jLabel83.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel83.setText("Title");

        jTextFieldEmployeeCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEmployeeCityKeyPressed(evt);
            }
        });

        jLabel84.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel84.setText("Enter ");

        jLabel85.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel85.setText("Search By");

        jComboBoxsearchemployee.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "EmployeeID", "Employee_Name", "ContactNo", "City", "Title" }));
        jComboBoxsearchemployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxsearchemployeeActionPerformed(evt);
            }
        });

        jButtonsearchEmployee1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonsearchEmployee1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonsearchEmployee1.setText("Search");
        jButtonsearchEmployee1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonsearchEmployee1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonsearchEmployee1ActionPerformed(evt);
            }
        });

        jTableaddEmployee.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableaddEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EmployeeID", "Name", "ContactNo", "City", "Email", "Gender", "Title"
            }
        ));
        jScrollPane11.setViewportView(jTableaddEmployee);

        jButtondeleteEmployee1.setBackground(new java.awt.Color(153, 255, 255));
        jButtondeleteEmployee1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtondeleteEmployee1.setText("Delete");
        jButtondeleteEmployee1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtondeleteEmployee1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtondeleteEmployee1ActionPerformed(evt);
            }
        });

        jButtonaddemployee1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonaddemployee1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonaddemployee1.setText("Add");
        jButtonaddemployee1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonaddemployee1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonaddemployee1ActionPerformed(evt);
            }
        });

        jButtonback1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonback1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonback1.setText("Back");
        jButtonback1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonback1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonback1ActionPerformed(evt);
            }
        });

        jButtonUpdateemployee1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonUpdateemployee1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonUpdateemployee1.setText("Update");
        jButtonUpdateemployee1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonUpdateemployee1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateemployee1ActionPerformed(evt);
            }
        });

        jComboBoxgender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F" }));
        jComboBoxgender.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxgenderKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameaddEmployeeLayout = new javax.swing.GroupLayout(jInternalFrameaddEmployee.getContentPane());
        jInternalFrameaddEmployee.getContentPane().setLayout(jInternalFrameaddEmployeeLayout);
        jInternalFrameaddEmployeeLayout.setHorizontalGroup(
            jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel76, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jInternalFrameaddEmployeeLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameaddEmployeeLayout.createSequentialGroup()
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel77)
                            .addComponent(jLabel78, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldEmpoyeeName, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addComponent(jTextFieldemployeeID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59)
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxsearchemployee, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldsearchtxt))
                        .addGap(69, 69, 69))
                    .addGroup(jInternalFrameaddEmployeeLayout.createSequentialGroup()
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jInternalFrameaddEmployeeLayout.createSequentialGroup()
                                .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameaddEmployeeLayout.createSequentialGroup()
                                        .addComponent(jLabel80)
                                        .addGap(48, 48, 48))
                                    .addGroup(jInternalFrameaddEmployeeLayout.createSequentialGroup()
                                        .addComponent(jLabel79)
                                        .addGap(6, 6, 6)))
                                .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldEmployeeCity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                    .addComponent(jTextFieldEmployeeEmail, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldEmployeeConatct, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGroup(jInternalFrameaddEmployeeLayout.createSequentialGroup()
                                .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel83, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel82))
                                    .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButtonaddemployee1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtondeleteEmployee1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonUpdateemployee1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonback1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jComboBoxgender, 0, 108, Short.MAX_VALUE)
                                        .addComponent(jTextFieldTitle)))))
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrameaddEmployeeLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonsearchEmployee1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(166, 166, 166))
                            .addGroup(jInternalFrameaddEmployeeLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 919, Short.MAX_VALUE))))))
        );
        jInternalFrameaddEmployeeLayout.setVerticalGroup(
            jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameaddEmployeeLayout.createSequentialGroup()
                .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameaddEmployeeLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel77)
                            .addComponent(jTextFieldemployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldEmpoyeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel78)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameaddEmployeeLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameaddEmployeeLayout.createSequentialGroup()
                                .addComponent(jComboBoxsearchemployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldsearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameaddEmployeeLayout.createSequentialGroup()
                                .addComponent(jLabel85)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel84)))))
                .addGap(11, 11, 11)
                .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameaddEmployeeLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel79)
                            .addComponent(jTextFieldEmployeeConatct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel80)
                            .addComponent(jTextFieldEmployeeCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel81)
                            .addComponent(jTextFieldEmployeeEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel82)
                            .addComponent(jComboBoxgender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameaddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel83)
                            .addComponent(jTextFieldTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66)
                        .addComponent(jButtonaddemployee1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtondeleteEmployee1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButtonUpdateemployee1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonback1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(600, Short.MAX_VALUE))
                    .addGroup(jInternalFrameaddEmployeeLayout.createSequentialGroup()
                        .addComponent(jButtonsearchEmployee1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane11))))
        );

        jInternalFrameaddSupllier.setClosable(true);
        jInternalFrameaddSupllier.setMaximizable(true);
        jInternalFrameaddSupllier.setResizable(true);
        jInternalFrameaddSupllier.setTitle("ADD SUPPLIER");
        jInternalFrameaddSupllier.setVisible(true);

        jLabel86.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel86.setText("SupplierID");

        jTextFieldsupplierID1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldsupplierID1KeyPressed(evt);
            }
        });

        jLabel87.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel87.setText("Name");

        jTextFieldSupplierName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldSupplierName1KeyPressed(evt);
            }
        });

        jLabel88.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel88.setText("Address");

        jLabel89.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel89.setText("ContactNo");

        jTextFieldsupplierContactNo1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldsupplierContactNo1KeyPressed(evt);
            }
        });

        jLabel90.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel90.setText("Gender");

        jLabel91.setBackground(new java.awt.Color(0, 0, 153));
        jLabel91.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabel91.setForeground(new java.awt.Color(0, 0, 204));
        jLabel91.setText("                            ADD SUPPLIER");
        jLabel91.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jComboBoxgenderSuplier1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F" }));
        jComboBoxgenderSuplier1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxgenderSuplier1KeyPressed(evt);
            }
        });

        jLabel4searchby1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4searchby1.setText("Search by");

        jComboBoxsupplier.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SupplierID", "Supplier_Name", "ContactNo" }));
        jComboBoxsupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxsupplierActionPerformed(evt);
            }
        });

        jLabel92.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel92.setText("Enter ");

        jButtonsearchSupplier1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonsearchSupplier1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonsearchSupplier1.setText("Search");
        jButtonsearchSupplier1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonsearchSupplier1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonsearchSupplier1ActionPerformed(evt);
            }
        });

        jButtonupdateSupplier1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonupdateSupplier1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonupdateSupplier1.setText("Update");
        jButtonupdateSupplier1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonupdateSupplier1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonupdateSupplier1ActionPerformed(evt);
            }
        });

        jButtonbackMainu1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonbackMainu1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonbackMainu1.setText("Back");
        jButtonbackMainu1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonbackMainu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonbackMainu1ActionPerformed(evt);
            }
        });

        jButtonDeleteSupplier1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonDeleteSupplier1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonDeleteSupplier1.setText("Delete");
        jButtonDeleteSupplier1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonDeleteSupplier1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteSupplier1ActionPerformed(evt);
            }
        });

        jButtonaddSupplier1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonaddSupplier1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonaddSupplier1.setText("Add");
        jButtonaddSupplier1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonaddSupplier1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonaddSupplier1ActionPerformed(evt);
            }
        });

        jTableSupplierTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SupplierID", "Name", "Address", "ContactNo"
            }
        ));
        jScrollPane12.setViewportView(jTableSupplierTable1);

        jTextAreaAddressSupplier1.setColumns(20);
        jTextAreaAddressSupplier1.setRows(5);
        jTextAreaAddressSupplier1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaAddressSupplier1KeyPressed(evt);
            }
        });
        jScrollPane13.setViewportView(jTextAreaAddressSupplier1);

        javax.swing.GroupLayout jInternalFrameaddSupllierLayout = new javax.swing.GroupLayout(jInternalFrameaddSupllier.getContentPane());
        jInternalFrameaddSupllier.getContentPane().setLayout(jInternalFrameaddSupllierLayout);
        jInternalFrameaddSupllierLayout.setHorizontalGroup(
            jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel91, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jInternalFrameaddSupllierLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameaddSupllierLayout.createSequentialGroup()
                        .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jInternalFrameaddSupllierLayout.createSequentialGroup()
                                .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel89, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel90, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jInternalFrameaddSupllierLayout.createSequentialGroup()
                                .addComponent(jLabel88)
                                .addGap(22, 22, 22)))
                        .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrameaddSupllierLayout.createSequentialGroup()
                                .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldsupplierContactNo1)
                                    .addComponent(jComboBoxgenderSuplier1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                            .addGroup(jInternalFrameaddSupllierLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 408, Short.MAX_VALUE)
                                .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameaddSupllierLayout.createSequentialGroup()
                                        .addComponent(jButtonsearchSupplier1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(160, 160, 160))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameaddSupllierLayout.createSequentialGroup()
                                        .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4searchby1)
                                            .addComponent(jLabel92, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(28, 28, 28)
                                        .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jComboBoxsupplier, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextFieldsearchsuppliercmbo1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(124, 124, 124))))))
                    .addGroup(jInternalFrameaddSupllierLayout.createSequentialGroup()
                        .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel86)
                            .addComponent(jLabel87))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldSupplierName1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(jTextFieldsupplierID1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap())
                    .addGroup(jInternalFrameaddSupllierLayout.createSequentialGroup()
                        .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonaddSupplier1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButtonbackMainu1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonupdateSupplier1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonDeleteSupplier1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane12))))
        );
        jInternalFrameaddSupllierLayout.setVerticalGroup(
            jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameaddSupllierLayout.createSequentialGroup()
                .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldsupplierID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel86))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameaddSupllierLayout.createSequentialGroup()
                        .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel87)
                            .addComponent(jTextFieldSupplierName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel88)
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jInternalFrameaddSupllierLayout.createSequentialGroup()
                        .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4searchby1)
                            .addComponent(jComboBoxsupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldsearchsuppliercmbo1)
                            .addComponent(jLabel92, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonsearchSupplier1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldsupplierContactNo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel89))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel90)
                    .addComponent(jComboBoxgenderSuplier1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jInternalFrameaddSupllierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameaddSupllierLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButtonaddSupplier1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDeleteSupplier1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonupdateSupplier1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonbackMainu1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jInternalFrameaddSupllierLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 1921, Short.MAX_VALUE))))
        );

        jInternalFrameAddStock.setClosable(true);
        jInternalFrameAddStock.setMaximizable(true);
        jInternalFrameAddStock.setResizable(true);
        jInternalFrameAddStock.setTitle("STOCK");
        jInternalFrameAddStock.setVisible(true);

        jLabel93.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabel93.setForeground(new java.awt.Color(0, 0, 204));
        jLabel93.setText("                              ADD STOCK");
        jLabel93.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel94.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel94.setText("StockID");

        jTextFieldstockID1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldstockID1KeyPressed(evt);
            }
        });

        jTextFieldstockName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldstockName1KeyPressed(evt);
            }
        });

        jLabel95.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel95.setText("Stock Name");

        jTextFieldquantitystock1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldquantitystock1KeyPressed(evt);
            }
        });

        jLabel96.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel96.setText("Quantity");

        jTextFieldstockprice1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldstockprice1KeyPressed(evt);
            }
        });

        jLabel97.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel97.setText("Price Per Unit");

        jTextFieldStockItemName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldStockItemName1KeyPressed(evt);
            }
        });

        jLabel98.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel98.setText("ItemID");

        jLabel99.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel99.setText("Enter");

        jLabel100.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel100.setText("Search by");

        jComboBoxsarchstock1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "StockID", "Stock_Name" }));
        jComboBoxsarchstock1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxsarchstock1ActionPerformed(evt);
            }
        });

        jButtonsearchStock1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonsearchStock1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonsearchStock1.setText("Search");
        jButtonsearchStock1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonsearchStock1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonsearchStock1ActionPerformed(evt);
            }
        });

        jTableStockTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StockID", "StockName", "Quantity", "Price Per Unit", "ItemID"
            }
        ));
        jScrollPane14.setViewportView(jTableStockTable1);

        jButtonAddStock1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonAddStock1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonAddStock1.setText("Add");
        jButtonAddStock1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonAddStock1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddStock1ActionPerformed(evt);
            }
        });

        jButtonDeleteStock1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonDeleteStock1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonDeleteStock1.setText("Delete");
        jButtonDeleteStock1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonDeleteStock1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteStock1ActionPerformed(evt);
            }
        });

        jButtonbackmainmenu1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonbackmainmenu1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonbackmainmenu1.setText("Back");
        jButtonbackmainmenu1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonbackmainmenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonbackmainmenu1ActionPerformed(evt);
            }
        });

        jButtonUpdateStock1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonUpdateStock1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonUpdateStock1.setText("Update");
        jButtonUpdateStock1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonUpdateStock1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateStock1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameAddStockLayout = new javax.swing.GroupLayout(jInternalFrameAddStock.getContentPane());
        jInternalFrameAddStock.getContentPane().setLayout(jInternalFrameAddStockLayout);
        jInternalFrameAddStockLayout.setHorizontalGroup(
            jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel93, javax.swing.GroupLayout.DEFAULT_SIZE, 1023, Short.MAX_VALUE)
            .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                                .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel95)
                                    .addComponent(jLabel96)
                                    .addComponent(jLabel94))
                                .addGap(18, 18, 18))
                            .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                                .addComponent(jLabel97, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrameAddStockLayout.createSequentialGroup()
                                .addComponent(jLabel98)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldstockID1, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(jTextFieldquantitystock1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldstockName1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldstockprice1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldStockItemName1, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDeleteStock1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonAddStock1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonUpdateStock1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonbackmainmenu1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameAddStockLayout.createSequentialGroup()
                                .addComponent(jButtonsearchStock1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameAddStockLayout.createSequentialGroup()
                                .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                                        .addComponent(jLabel100, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44))
                                    .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                                        .addComponent(jLabel99, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBoxsarchstock1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldsearctxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(49, 49, 49))
                    .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jInternalFrameAddStockLayout.setVerticalGroup(
            jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                .addComponent(jLabel93, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel94)
                            .addComponent(jTextFieldstockID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel95)
                            .addComponent(jTextFieldstockName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel96)
                            .addComponent(jTextFieldquantitystock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel100)
                            .addComponent(jComboBoxsarchstock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel99, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldsearctxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonsearchStock1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                        .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jInternalFrameAddStockLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel97))
                            .addComponent(jTextFieldstockprice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldStockItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel98))
                        .addGap(36, 36, 36)
                        .addComponent(jButtonAddStock1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDeleteStock1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUpdateStock1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonbackmainmenu1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 1180, Short.MAX_VALUE)))
        );

        jInternalFrameAddITEM.setClosable(true);
        jInternalFrameAddITEM.setMaximizable(true);
        jInternalFrameAddITEM.setResizable(true);
        jInternalFrameAddITEM.setTitle("ADD ITEM");
        jInternalFrameAddITEM.setVisible(true);

        jLabel101.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel101.setText("ItemID");

        jTextFieldItemID1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldItemID1KeyPressed(evt);
            }
        });

        jLabel102.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel102.setText("Name");

        jTextFieldItemName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldItemName1KeyPressed(evt);
            }
        });

        jLabel103.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel103.setText("Price");

        jTextFieldItemPrice1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldItemPrice1KeyPressed(evt);
            }
        });

        jLabel104.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel104.setText("Quantity");

        jTextFielditemQuantity1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFielditemQuantity1KeyPressed(evt);
            }
        });

        jLabel105.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel105.setText("CatagoryID");

        jTextFieldcatagoryIDItem1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldcatagoryIDItem1KeyPressed(evt);
            }
        });

        jLabel106.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel106.setText("SupplierID");

        jTextFieldSupplierIDItem1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldSupplierIDItem1KeyPressed(evt);
            }
        });

        jLabel107.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel107.setText("Enter ");

        jLabel108.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel108.setText("Search By");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ItemID", "Item_Name" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jButtonAddItem1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonAddItem1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonAddItem1.setText("Add");
        jButtonAddItem1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonAddItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddItem1ActionPerformed(evt);
            }
        });

        jButtonsearchItem1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonsearchItem1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonsearchItem1.setText("Search");
        jButtonsearchItem1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonsearchItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonsearchItem1ActionPerformed(evt);
            }
        });

        jButtonbackMAINMENU1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonbackMAINMENU1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonbackMAINMENU1.setText("Back");
        jButtonbackMAINMENU1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonbackMAINMENU1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonbackMAINMENU1ActionPerformed(evt);
            }
        });

        jButtonDeleteItem1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonDeleteItem1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonDeleteItem1.setText("Delete");
        jButtonDeleteItem1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonDeleteItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteItem1ActionPerformed(evt);
            }
        });

        jButtonUpdateItem1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonUpdateItem1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonUpdateItem1.setText("Update");
        jButtonUpdateItem1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonUpdateItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateItem1ActionPerformed(evt);
            }
        });

        jTableItemTABLE1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemID", "Name", "Price", "Quantity", "CatagoryID", "SupplierID"
            }
        ));
        jScrollPane15.setViewportView(jTableItemTABLE1);

        jLabel109.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabel109.setForeground(new java.awt.Color(0, 0, 204));
        jLabel109.setText("                                   ADD ITEM");
        jLabel109.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jInternalFrameAddITEMLayout = new javax.swing.GroupLayout(jInternalFrameAddITEM.getContentPane());
        jInternalFrameAddITEM.getContentPane().setLayout(jInternalFrameAddITEMLayout);
        jInternalFrameAddITEMLayout.setHorizontalGroup(
            jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel101)
                            .addComponent(jLabel102))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldItemID1)
                            .addComponent(jTextFieldItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel107, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel108, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox4, 0, 129, Short.MAX_VALUE)
                            .addComponent(jTextFieldsearchcmbofield1))
                        .addGap(88, 88, 88))
                    .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                                .addComponent(jLabel105, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldcatagoryIDItem1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                                .addComponent(jLabel106)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldSupplierIDItem1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                                .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel104)
                                    .addComponent(jLabel103))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFielditemQuantity1)
                                    .addComponent(jTextFieldItemPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonUpdateItem1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonDeleteItem1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonAddItem1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonbackMAINMENU1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE))
                            .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonsearchItem1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(149, 149, 149))))))
            .addComponent(jLabel109, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jInternalFrameAddITEMLayout.setVerticalGroup(
            jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                .addComponent(jLabel109, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel101)
                            .addComponent(jTextFieldItemID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel102)
                            .addComponent(jTextFieldItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel108, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel107)
                            .addComponent(jTextFieldsearchcmbofield1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldItemPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel103))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel104)
                            .addComponent(jTextFielditemQuantity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel105)
                            .addComponent(jTextFieldcatagoryIDItem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameAddITEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel106)
                            .addComponent(jTextFieldSupplierIDItem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addComponent(jButtonAddItem1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButtonDeleteItem1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButtonUpdateItem1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonbackMAINMENU1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jInternalFrameAddITEMLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButtonsearchItem1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 1093, Short.MAX_VALUE))))
        );

        jInternalFrameINVOICE.setClosable(true);
        jInternalFrameINVOICE.setMaximizable(true);
        jInternalFrameINVOICE.setResizable(true);
        jInternalFrameINVOICE.setTitle("INVOICE");
        jInternalFrameINVOICE.setVisible(true);

        jLabel110.setBackground(new java.awt.Color(51, 0, 153));
        jLabel110.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabel110.setForeground(new java.awt.Color(51, 0, 204));
        jLabel110.setText("                                       INVOICE");
        jLabel110.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel111.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel111.setText("InvoiceNo");

        jTextFieldinvoiceNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldinvoiceNoKeyPressed(evt);
            }
        });

        jLabel112.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel112.setText("Date:");

        jTextFieldDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldDateKeyPressed(evt);
            }
        });

        jLabel115.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel115.setText("Customer Name");

        jTextFieldcustomerNAME.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldcustomerNAMEKeyPressed(evt);
            }
        });

        jLabel116.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel116.setText("Item Name");

        jTextFieldOTEMNAME.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldOTEMNAMEKeyPressed(evt);
            }
        });

        jLabel117.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel117.setText("Price Per Unit");

        jTextFieldPricePERUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPricePERUnitKeyPressed(evt);
            }
        });

        jLabel118.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel118.setText("Quantity");

        jTextFieldQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldQuantityActionPerformed(evt);
            }
        });
        jTextFieldQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQuantityKeyPressed(evt);
            }
        });

        jLabel119.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel119.setText("Total Price");

        jTextFieldTotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTotalPriceActionPerformed(evt);
            }
        });
        jTextFieldTotalPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldTotalPriceKeyPressed(evt);
            }
        });

        jButtonprintinvoice1.setBackground(new java.awt.Color(153, 255, 255));
        jButtonprintinvoice1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonprintinvoice1.setText("Print");
        jButtonprintinvoice1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonprintinvoice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonprintinvoice1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(153, 255, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setText("Add");
        jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("Back");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextAreaprint.setColumns(20);
        jTextAreaprint.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 14)); // NOI18N
        jTextAreaprint.setRows(5);
        jScrollPane19.setViewportView(jTextAreaprint);

        javax.swing.GroupLayout jInternalFrameINVOICELayout = new javax.swing.GroupLayout(jInternalFrameINVOICE.getContentPane());
        jInternalFrameINVOICE.getContentPane().setLayout(jInternalFrameINVOICELayout);
        jInternalFrameINVOICELayout.setHorizontalGroup(
            jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel110, javax.swing.GroupLayout.DEFAULT_SIZE, 1097, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameINVOICELayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton4))
            .addGroup(jInternalFrameINVOICELayout.createSequentialGroup()
                .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameINVOICELayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonprintinvoice1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jInternalFrameINVOICELayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel118)
                            .addComponent(jLabel119)
                            .addComponent(jLabel115)
                            .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel117, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel116, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameINVOICELayout.createSequentialGroup()
                                    .addComponent(jLabel111)
                                    .addGap(28, 28, 28))
                                .addGroup(jInternalFrameINVOICELayout.createSequentialGroup()
                                    .addComponent(jLabel112, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(39, 39, 39))))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldinvoiceNo)
                                .addComponent(jTextFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldTotalPrice)
                                    .addComponent(jTextFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldOTEMNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldPricePERUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jTextFieldcustomerNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(164, 164, 164)
                .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jInternalFrameINVOICELayout.setVerticalGroup(
            jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameINVOICELayout.createSequentialGroup()
                .addComponent(jLabel110, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameINVOICELayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldinvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel111, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel112)
                            .addComponent(jTextFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel115)
                            .addComponent(jTextFieldcustomerNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel116)
                            .addComponent(jTextFieldOTEMNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel117)
                            .addComponent(jTextFieldPricePERUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel118)
                            .addComponent(jTextFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameINVOICELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel119)
                            .addComponent(jTextFieldTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(109, 109, 109)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonprintinvoice1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jInternalFrameINVOICELayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(431, Short.MAX_VALUE))
        );

        jInternalFrameRepairingcustomer.setTitle("REPAIRING CUSTOMER");
        jInternalFrameRepairingcustomer.setVisible(true);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("RepairingID");

        jTextFieldreparingID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldreparingIDKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Catagory");

        jTextFieldCATAGORY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCATAGORYKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Customer Name");

        jTextFieldCUSTOMERNAME.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCUSTOMERNAMEKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Rep_Details");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Rep_Status");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Price");

        jTextFieldprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldpriceKeyPressed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Search by");

        jLabel18.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 204));
        jLabel18.setText("                ADD REPAIRING CUSTOMER");
        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Enter");

        jComboBoxselectsearchreparing.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "RepID", "Customer_Name", "Catagory" }));
        jComboBoxselectsearchreparing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxselectsearchreparingActionPerformed(evt);
            }
        });

        jButtonSEARCHREAPRINGCUSTOMER.setBackground(new java.awt.Color(153, 255, 255));
        jButtonSEARCHREAPRINGCUSTOMER.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonSEARCHREAPRINGCUSTOMER.setText("Search");
        jButtonSEARCHREAPRINGCUSTOMER.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSEARCHREAPRINGCUSTOMER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSEARCHREAPRINGCUSTOMERActionPerformed(evt);
            }
        });

        jButtonaddreparingCustomer.setBackground(new java.awt.Color(153, 255, 255));
        jButtonaddreparingCustomer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonaddreparingCustomer.setText("Add");
        jButtonaddreparingCustomer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonaddreparingCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonaddreparingCustomerActionPerformed(evt);
            }
        });

        jButtondeletecustomer.setBackground(new java.awt.Color(153, 255, 255));
        jButtondeletecustomer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtondeletecustomer.setText("Delete");
        jButtondeletecustomer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtondeletecustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtondeletecustomerActionPerformed(evt);
            }
        });

        jButtonupdaterepairing.setBackground(new java.awt.Color(153, 255, 255));
        jButtonupdaterepairing.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonupdaterepairing.setText("Update");
        jButtonupdaterepairing.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonupdaterepairing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonupdaterepairingActionPerformed(evt);
            }
        });

        jButtonbackReparing.setBackground(new java.awt.Color(153, 255, 255));
        jButtonbackReparing.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonbackReparing.setText("Back");
        jButtonbackReparing.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonbackReparing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonbackReparingActionPerformed(evt);
            }
        });

        jTablereparingTABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RepID", "Customer Name", "Catagory", "Rep Details", "Status", "Price"
            }
        ));
        jScrollPane5.setViewportView(jTablereparingTABLE);

        jTextAreaREPDETAILS.setColumns(20);
        jTextAreaREPDETAILS.setRows(5);
        jTextAreaREPDETAILS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaREPDETAILSKeyPressed(evt);
            }
        });
        jScrollPane6.setViewportView(jTextAreaREPDETAILS);

        jComboBoxreadypending.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ready", "Pending" }));
        jComboBoxreadypending.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxreadypendingKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameRepairingcustomerLayout = new javax.swing.GroupLayout(jInternalFrameRepairingcustomer.getContentPane());
        jInternalFrameRepairingcustomer.getContentPane().setLayout(jInternalFrameRepairingcustomerLayout);
        jInternalFrameRepairingcustomerLayout.setHorizontalGroup(
            jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                        .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxreadypending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldprice, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldCATAGORY, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldCUSTOMERNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldreparingID, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                        .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonaddreparingCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonupdaterepairing, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonbackReparing, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtondeletecustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)))
                .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxselectsearchreparing, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                                .addComponent(jButtonSEARCHREAPRINGCUSTOMER, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(108, 108, 108))
                            .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldsearchReapring, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33))))
                    .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 51, Short.MAX_VALUE))))
        );
        jInternalFrameRepairingcustomerLayout.setVerticalGroup(
            jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldreparingID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jTextFieldCUSTOMERNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxselectsearchreparing, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldsearchReapring, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSEARCHREAPRINGCUSTOMER, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                        .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTextFieldCATAGORY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel10))
                            .addGroup(jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jComboBoxreadypending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jInternalFrameRepairingcustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jTextFieldprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonaddreparingCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtondeletecustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonupdaterepairing, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonbackReparing, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameRepairingcustomerLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );

        jInternalFrameviewALLCustomer.setClosable(true);
        jInternalFrameviewALLCustomer.setMaximizable(true);
        jInternalFrameviewALLCustomer.setResizable(true);
        jInternalFrameviewALLCustomer.setTitle("VIEW ALL CUSTOMER");
        jInternalFrameviewALLCustomer.setVisible(true);

        jTableviewALLCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane7.setViewportView(jTableviewALLCustomer);

        jLabelcustomerRecord.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabelcustomerRecord.setForeground(new java.awt.Color(0, 0, 153));
        jLabelcustomerRecord.setText("                     CUSTOMER RECORD");

        jButton10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton10.setText("Back");
        jButton10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameviewALLCustomerLayout = new javax.swing.GroupLayout(jInternalFrameviewALLCustomer.getContentPane());
        jInternalFrameviewALLCustomer.getContentPane().setLayout(jInternalFrameviewALLCustomerLayout);
        jInternalFrameviewALLCustomerLayout.setHorizontalGroup(
            jInternalFrameviewALLCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameviewALLCustomerLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton10))
            .addGroup(jInternalFrameviewALLCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelcustomerRecord, javax.swing.GroupLayout.DEFAULT_SIZE, 963, Short.MAX_VALUE))
        );
        jInternalFrameviewALLCustomerLayout.setVerticalGroup(
            jInternalFrameviewALLCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameviewALLCustomerLayout.createSequentialGroup()
                .addComponent(jLabelcustomerRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7))
        );

        jInternalFrameEmployeeRecord.setClosable(true);
        jInternalFrameEmployeeRecord.setMaximizable(true);
        jInternalFrameEmployeeRecord.setResizable(true);
        jInternalFrameEmployeeRecord.setTitle("VIEW ALL EMPLOYEE");
        jInternalFrameEmployeeRecord.setVisible(true);

        jLabelEMployeeRecord.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabelEMployeeRecord.setForeground(new java.awt.Color(0, 0, 204));
        jLabelEMployeeRecord.setText("                                  EMPLOYEE RECORD");

        jTableVIEWALLEMPLOYEETABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane8.setViewportView(jTableVIEWALLEMPLOYEETABLE);

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton9.setText("Back");
        jButton9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameEmployeeRecordLayout = new javax.swing.GroupLayout(jInternalFrameEmployeeRecord.getContentPane());
        jInternalFrameEmployeeRecord.getContentPane().setLayout(jInternalFrameEmployeeRecordLayout);
        jInternalFrameEmployeeRecordLayout.setHorizontalGroup(
            jInternalFrameEmployeeRecordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelEMployeeRecord, javax.swing.GroupLayout.DEFAULT_SIZE, 1173, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameEmployeeRecordLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton9))
            .addComponent(jScrollPane8)
        );
        jInternalFrameEmployeeRecordLayout.setVerticalGroup(
            jInternalFrameEmployeeRecordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameEmployeeRecordLayout.createSequentialGroup()
                .addComponent(jLabelEMployeeRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 1232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        jInternalFrameVIEWSUPPLIERRECORD.setTitle("VIEW ALL SUPPLIER");
        jInternalFrameVIEWSUPPLIERRECORD.setVisible(true);

        jTableVIEWALLESUPPLIER.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane9.setViewportView(jTableVIEWALLESUPPLIER);

        jLabelSupplierRecord.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabelSupplierRecord.setForeground(new java.awt.Color(0, 0, 153));
        jLabelSupplierRecord.setText("                                      SUPPLIER RECORD");

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton8.setText("Back");
        jButton8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameVIEWSUPPLIERRECORDLayout = new javax.swing.GroupLayout(jInternalFrameVIEWSUPPLIERRECORD.getContentPane());
        jInternalFrameVIEWSUPPLIERRECORD.getContentPane().setLayout(jInternalFrameVIEWSUPPLIERRECORDLayout);
        jInternalFrameVIEWSUPPLIERRECORDLayout.setHorizontalGroup(
            jInternalFrameVIEWSUPPLIERRECORDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelSupplierRecord, javax.swing.GroupLayout.DEFAULT_SIZE, 1137, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameVIEWSUPPLIERRECORDLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton8))
            .addComponent(jScrollPane9)
        );
        jInternalFrameVIEWSUPPLIERRECORDLayout.setVerticalGroup(
            jInternalFrameVIEWSUPPLIERRECORDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameVIEWSUPPLIERRECORDLayout.createSequentialGroup()
                .addComponent(jLabelSupplierRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE))
        );

        jInternalFrameALLSTOCKRECORD.setClosable(true);
        jInternalFrameALLSTOCKRECORD.setMaximizable(true);
        jInternalFrameALLSTOCKRECORD.setResizable(true);
        jInternalFrameALLSTOCKRECORD.setTitle("VIEW ALL STOCK");
        jInternalFrameALLSTOCKRECORD.setVisible(true);

        jLabelStockRecord.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabelStockRecord.setForeground(new java.awt.Color(0, 0, 153));
        jLabelStockRecord.setText("                             STOCK RECORD");

        jTableVIEWALLSTOCK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane10.setViewportView(jTableVIEWALLSTOCK);

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton7.setText("Back");
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameALLSTOCKRECORDLayout = new javax.swing.GroupLayout(jInternalFrameALLSTOCKRECORD.getContentPane());
        jInternalFrameALLSTOCKRECORD.getContentPane().setLayout(jInternalFrameALLSTOCKRECORDLayout);
        jInternalFrameALLSTOCKRECORDLayout.setHorizontalGroup(
            jInternalFrameALLSTOCKRECORDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameALLSTOCKRECORDLayout.createSequentialGroup()
                .addComponent(jLabelStockRecord, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
                .addGap(270, 270, 270)
                .addComponent(jButton7))
            .addComponent(jScrollPane10)
        );
        jInternalFrameALLSTOCKRECORDLayout.setVerticalGroup(
            jInternalFrameALLSTOCKRECORDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameALLSTOCKRECORDLayout.createSequentialGroup()
                .addGroup(jInternalFrameALLSTOCKRECORDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelStockRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jInternalFrameALLSTOCKRECORDLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jButton7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE))
        );

        jInternalFrameVIEWITEMRECORD.setClosable(true);
        jInternalFrameVIEWITEMRECORD.setMaximizable(true);
        jInternalFrameVIEWITEMRECORD.setResizable(true);
        jInternalFrameVIEWITEMRECORD.setTitle("VIEW ALL ITEM");
        jInternalFrameVIEWITEMRECORD.setVisible(true);

        jLabelItemrecord.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabelItemrecord.setForeground(new java.awt.Color(0, 0, 153));
        jLabelItemrecord.setText("                                        ITEM RECORD");

        jTableVIEWALLITEM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane17.setViewportView(jTableVIEWALLITEM);

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton6.setText("Back");
        jButton6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameVIEWITEMRECORDLayout = new javax.swing.GroupLayout(jInternalFrameVIEWITEMRECORD.getContentPane());
        jInternalFrameVIEWITEMRECORD.getContentPane().setLayout(jInternalFrameVIEWITEMRECORDLayout);
        jInternalFrameVIEWITEMRECORDLayout.setHorizontalGroup(
            jInternalFrameVIEWITEMRECORDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelItemrecord, javax.swing.GroupLayout.DEFAULT_SIZE, 1188, Short.MAX_VALUE)
            .addGroup(jInternalFrameVIEWITEMRECORDLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton6))
            .addGroup(jInternalFrameVIEWITEMRECORDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 1188, Short.MAX_VALUE))
        );
        jInternalFrameVIEWITEMRECORDLayout.setVerticalGroup(
            jInternalFrameVIEWITEMRECORDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameVIEWITEMRECORDLayout.createSequentialGroup()
                .addComponent(jLabelItemrecord, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addGap(0, 1498, Short.MAX_VALUE))
            .addGroup(jInternalFrameVIEWITEMRECORDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameVIEWITEMRECORDLayout.createSequentialGroup()
                    .addContainerGap(127, Short.MAX_VALUE)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 1340, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jInternalFrameVIEWALLBILLRECORD.setClosable(true);
        jInternalFrameVIEWALLBILLRECORD.setMaximizable(true);
        jInternalFrameVIEWALLBILLRECORD.setResizable(true);
        jInternalFrameVIEWALLBILLRECORD.setTitle("VIEW ALL BILL");
        jInternalFrameVIEWALLBILLRECORD.setVisible(true);

        jLabelbillRecord.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabelbillRecord.setForeground(new java.awt.Color(0, 0, 153));
        jLabelbillRecord.setText("                             BILL RECORD");

        jTableVIEWALLBillRECORD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane18.setViewportView(jTableVIEWALLBillRECORD);

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setText("Back");
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameVIEWALLBILLRECORDLayout = new javax.swing.GroupLayout(jInternalFrameVIEWALLBILLRECORD.getContentPane());
        jInternalFrameVIEWALLBILLRECORD.getContentPane().setLayout(jInternalFrameVIEWALLBILLRECORDLayout);
        jInternalFrameVIEWALLBILLRECORDLayout.setHorizontalGroup(
            jInternalFrameVIEWALLBILLRECORDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelbillRecord, javax.swing.GroupLayout.DEFAULT_SIZE, 1145, Short.MAX_VALUE)
            .addGroup(jInternalFrameVIEWALLBILLRECORDLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton5))
            .addGroup(jInternalFrameVIEWALLBILLRECORDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrameVIEWALLBILLRECORDLayout.createSequentialGroup()
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.DEFAULT_SIZE, 1135, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jInternalFrameVIEWALLBILLRECORDLayout.setVerticalGroup(
            jInternalFrameVIEWALLBILLRECORDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameVIEWALLBILLRECORDLayout.createSequentialGroup()
                .addComponent(jLabelbillRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jInternalFrameVIEWALLBILLRECORDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameVIEWALLBILLRECORDLayout.createSequentialGroup()
                    .addContainerGap(117, Short.MAX_VALUE)
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 1358, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jInternalFrameSIGNUP.setClosable(true);
        jInternalFrameSIGNUP.setMaximizable(true);
        jInternalFrameSIGNUP.setResizable(true);
        jInternalFrameSIGNUP.setTitle("MobileShopManagementSystem");
        jInternalFrameSIGNUP.setVisible(true);
        jInternalFrameSIGNUP.getContentPane().setLayout(null);

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Enter Name");
        jInternalFrameSIGNUP.getContentPane().add(jLabel38);
        jLabel38.setBounds(338, 200, 110, 25);

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Password");
        jInternalFrameSIGNUP.getContentPane().add(jLabel39);
        jLabel39.setBounds(336, 240, 100, 20);

        jTextFieldEnterName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEnterNameKeyPressed(evt);
            }
        });
        jInternalFrameSIGNUP.getContentPane().add(jTextFieldEnterName);
        jTextFieldEnterName.setBounds(500, 190, 158, 30);

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("UserType");
        jInternalFrameSIGNUP.getContentPane().add(jLabel40);
        jLabel40.setBounds(336, 320, 100, 20);

        jComboBoxSelectNormalAdmin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Admin" }));
        jComboBoxSelectNormalAdmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxSelectNormalAdminKeyPressed(evt);
            }
        });
        jInternalFrameSIGNUP.getContentPane().add(jComboBoxSelectNormalAdmin);
        jComboBoxSelectNormalAdmin.setBounds(500, 320, 160, 30);

        jButtonSIGNUP.setBackground(new java.awt.Color(153, 255, 255));
        jButtonSIGNUP.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonSIGNUP.setText("SIGNUP");
        jButtonSIGNUP.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSIGNUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSIGNUPActionPerformed(evt);
            }
        });
        jInternalFrameSIGNUP.getContentPane().add(jButtonSIGNUP);
        jButtonSIGNUP.setBounds(360, 380, 100, 44);

        jButtonSIGNIN.setBackground(new java.awt.Color(153, 255, 255));
        jButtonSIGNIN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonSIGNIN.setText("SIGNIN");
        jButtonSIGNIN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSIGNIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSIGNINActionPerformed(evt);
            }
        });
        jInternalFrameSIGNUP.getContentPane().add(jButtonSIGNIN);
        jButtonSIGNIN.setBounds(570, 380, 96, 44);

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("Confirm Password");
        jInternalFrameSIGNUP.getContentPane().add(jLabel41);
        jLabel41.setBounds(330, 280, 170, 20);

        jTextFieldpasswordsignup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldpasswordsignupKeyPressed(evt);
            }
        });
        jInternalFrameSIGNUP.getContentPane().add(jTextFieldpasswordsignup);
        jTextFieldpasswordsignup.setBounds(500, 240, 160, 30);

        jTextFieldcnfrmPasswordSignup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldcnfrmPasswordSignupKeyPressed(evt);
            }
        });
        jInternalFrameSIGNUP.getContentPane().add(jTextFieldcnfrmPasswordSignup);
        jTextFieldcnfrmPasswordSignup.setBounds(500, 280, 160, 30);

        jLabel43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/finalprojectoopmobileshop/IMG-20190112-WA0012.jpg"))); // NOI18N
        jInternalFrameSIGNUP.getContentPane().add(jLabel43);
        jLabel43.setBounds(0, 0, 1280, 730);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jInternalFrameSIGNUP, javax.swing.GroupLayout.PREFERRED_SIZE, 1294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jInternalFrameaddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jInternalFrameaddSupllier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jInternalFrameAddStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jInternalFrameAddITEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jInternalFrameINVOICE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jInternalFrameRepairingcustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jInternalLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 1349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jInternalFrameMainmenu, javax.swing.GroupLayout.PREFERRED_SIZE, 1455, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jInternalFrameAddCustomer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jInternalFrameAddCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jInternalFrameaddpay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jInternalFrameviewALLCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jInternalFrameEmployeeRecord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jInternalFrameVIEWSUPPLIERRECORD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jInternalFrameALLSTOCKRECORD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jInternalFrameVIEWITEMRECORD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jInternalFrameVIEWALLBILLRECORD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(737, 737, 737))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jInternalFrameAddCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1117, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jInternalFrameaddSupllier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jInternalFrameaddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jInternalFrameAddStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jInternalFrameAddITEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jInternalFrameINVOICE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jInternalFrameRepairingcustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(430, 430, 430))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jInternalFrameaddpay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jInternalFrameVIEWALLBILLRECORD, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jInternalFrameVIEWSUPPLIERRECORD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jInternalFrameMainmenu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jInternalFrameEmployeeRecord, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jInternalFrameALLSTOCKRECORD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jInternalFrameVIEWITEMRECORD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jInternalFrameviewALLCustomer, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jInternalFrameAddCustomer1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jInternalLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 886, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jInternalFrameSIGNUP, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldusernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldusernameActionPerformed

    private void jTextFieldusernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldusernameKeyPressed
        if(evt.getKeyCode()<59 && evt.getKeyCode()>47 )
        {
            JOptionPane.showMessageDialog(null,"Digits are Not Allowed");
            
        }
        else if(evt.getKeyCode()==10)
        {
            jTextFieldpassword.requestFocus(true);
        }
    }//GEN-LAST:event_jTextFieldusernameKeyPressed

    private void jButtonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoginActionPerformed
        String username=jTextFieldusername.getText();
        String password=jTextFieldpassword.getText();
        String selectOption=""+jComboBoxnormalAdmin.getSelectedItem();

        if(username.equals("") && password.equals(""))
        {
            JOptionPane.showMessageDialog(null,"PLz Insert Username and Password");
        }
        else if(password.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Password is Missing");
        }
        else if (username.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Username is mising");

        }
        
        else
        {
            try
            {
                DatabaseConnectivity db=new DatabaseConnectivity();
                conn=db.getDatabaseConnectivity();
                Statement stat=conn.createStatement();
                ResultSet rs=stat.executeQuery("Select * From Login WHERE Username='"+username+"'and Password='"+password+"' and UserType='"+selectOption+"'");

                if(rs.next())
                {
                    //jInternalFrameMainMenu.setVisible(true);
                    jInternalLogin.setVisible(false);
                    jInternalFrameMainmenu.setVisible(true);

                }
                else
                {
                    JOptionPane.showMessageDialog(null,"UserType Incorrect");

                }
            }
            catch(Exception e)
            {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_jButtonLoginActionPerformed

    private void jComboBoxnormalAdminKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxnormalAdminKeyPressed
        if(evt.getKeyCode()==10)
        {
            jButtonLogin.doClick();
        }
    }//GEN-LAST:event_jComboBoxnormalAdminKeyPressed

    private void jMenuItemaddcatogory2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemaddcatogory2ActionPerformed
        jInternalFrameAddCatagory.setVisible(true);
        jInternalFrameMainmenu.setVisible(false);

    }//GEN-LAST:event_jMenuItemaddcatogory2ActionPerformed

    private void jMenuItemaddCustomer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemaddCustomer2ActionPerformed
        jInternalFrameAddCustomer1.setVisible(true);
        jInternalFrameMainmenu.setVisible(false);
    }//GEN-LAST:event_jMenuItemaddCustomer2ActionPerformed

    private void jMenuItemaddEmployee2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemaddEmployee2ActionPerformed
        jInternalFrameaddEmployee.setVisible(true);
        jInternalFrameMainmenu.setVisible(false);
    }//GEN-LAST:event_jMenuItemaddEmployee2ActionPerformed

    private void jMenuItemAddStock2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAddStock2ActionPerformed
        jInternalFrameAddStock.setVisible(true);
        jInternalFrameMainmenu.setVisible(false);

    }//GEN-LAST:event_jMenuItemAddStock2ActionPerformed

    private void jMenuItemAddsuplier2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAddsuplier2ActionPerformed
        jInternalFrameaddSupllier.setVisible(true);
        jInternalFrameMainmenu.setVisible(false);
    }//GEN-LAST:event_jMenuItemAddsuplier2ActionPerformed

    private void jMenuItemDetails2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDetails2ActionPerformed
        jInternalFrameAddITEM.setVisible(true);
        jInternalFrameMainmenu.setVisible(false);
    }//GEN-LAST:event_jMenuItemDetails2ActionPerformed

    private void jMenuItemcreateBill2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemcreateBill2ActionPerformed
        jInternalFrameINVOICE.setVisible(true);
        jInternalFrameMainmenu.setVisible(false);
    }//GEN-LAST:event_jMenuItemcreateBill2ActionPerformed

    private void jMenuItemPayDetails4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPayDetails4ActionPerformed
        jInternalFrameaddpay.setVisible(true);
        jInternalFrameMainmenu.setVisible(false);
    }//GEN-LAST:event_jMenuItemPayDetails4ActionPerformed

    private void jMenuItemviewcustomerallrecord2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemviewcustomerallrecord2ActionPerformed
        jInternalFrameMainmenu.setVisible(false);
        jInternalFrameviewALLCustomer.setVisible(true);
        String tableHeadings[]={"Sr.No","Customer ID","Customer Name","Address","ContactNo","City","Email","ItemID"};
        try
        {
            DatabaseConnectivity  databaseConnectivity = new DatabaseConnectivity();
            conn = databaseConnectivity.getDatabaseConnectivity();
            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery("Select * from Customer");
            int rows = 0;
            while(resultSet.next())
            {
                rows++;
            }

            dataForTableViewAllRecords = new Object[rows][8];
            resultSet = statement.executeQuery("SELECT * from Customer");
            int rowIndex = 0;
            while(resultSet.next())
            {
                dataForTableViewAllRecords[rowIndex][0] = rowIndex + 1;
                dataForTableViewAllRecords[rowIndex][1] = resultSet.getString("CustomerID");
                dataForTableViewAllRecords[rowIndex][2] = resultSet.getString("Customer_Name");
                dataForTableViewAllRecords[rowIndex][3] = resultSet.getString("C_Address");
                dataForTableViewAllRecords[rowIndex][4] = resultSet.getString("ContactNo");
                dataForTableViewAllRecords[rowIndex][5] = resultSet.getString("City");
                dataForTableViewAllRecords[rowIndex][6] = resultSet.getString("Email");
                dataForTableViewAllRecords[rowIndex][7] = resultSet.getString("ItemID");
                rowIndex++;
            }
            statement.close();
        }
        catch( Exception e )
        {
            System.out.println(""+e);

        }
        jTableviewALLCustomer.setModel(new javax.swing.table.DefaultTableModel(
        dataForTableViewAllRecords, tableHeadings));

        jTableviewALLCustomer.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));

        jTableviewALLCustomer.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
    }//GEN-LAST:event_jMenuItemviewcustomerallrecord2ActionPerformed

    private void jMenuItemviewStockallrecord3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemviewStockallrecord3ActionPerformed
        jInternalFrameMainmenu.setVisible(false);
        jInternalFrameALLSTOCKRECORD.setVisible(true);
        String tableHeadings[]={"Sr.No","Stock ID","Stock Name","Quantity","Price","ItemID"};
        try
        {
            DatabaseConnectivity  databaseConnectivity = new DatabaseConnectivity();
            conn = databaseConnectivity.getDatabaseConnectivity();
            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery("Select * from Stock");
            int rows = 0;
            while(resultSet.next())
            {
                rows++;
            }

            dataForTableViewAllRecords = new Object[rows][6];
            resultSet = statement.executeQuery("SELECT * from Stock");
            int rowIndex = 0;
            while(resultSet.next())
            {
                dataForTableViewAllRecords[rowIndex][0] = rowIndex + 1;
                dataForTableViewAllRecords[rowIndex][1] = resultSet.getString("StockID");
                dataForTableViewAllRecords[rowIndex][2] = resultSet.getString("Stock_Name");
                dataForTableViewAllRecords[rowIndex][3] = resultSet.getString("Quantity");
                dataForTableViewAllRecords[rowIndex][4] = resultSet.getString("Price");
                dataForTableViewAllRecords[rowIndex][5] = resultSet.getString("ItemID");
                rowIndex++;
            }
            statement.close();
        }
        catch( Exception e )
        {
            System.out.println(""+e);

        }
        jTableVIEWALLSTOCK.setModel(new javax.swing.table.DefaultTableModel(
        dataForTableViewAllRecords, tableHeadings));

        jTableVIEWALLSTOCK.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));

        jTableVIEWALLSTOCK.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
        
    }//GEN-LAST:event_jMenuItemviewStockallrecord3ActionPerformed

    private void jMenuItemviewItemallrecord4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemviewItemallrecord4ActionPerformed
        jInternalFrameMainmenu.setVisible(false);
        jInternalFrameVIEWITEMRECORD.setVisible(true);
        String tableHeadings[]={"Sr.No","Item ID","Item Name","Price","Quantity","Catagory ID","Supplier ID"};
        try
        {
            DatabaseConnectivity  databaseConnectivity = new DatabaseConnectivity();
            conn = databaseConnectivity.getDatabaseConnectivity();
            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery("Select * from Item");
            int rows = 0;
            while(resultSet.next())
            {
                rows++;
            }

            dataForTableViewAllRecords = new Object[rows][7];
            resultSet = statement.executeQuery("SELECT * from Item");
            int rowIndex = 0;
            while(resultSet.next())
            {
                dataForTableViewAllRecords[rowIndex][0] = rowIndex + 1;
                dataForTableViewAllRecords[rowIndex][1] = resultSet.getString("ItemID");
                dataForTableViewAllRecords[rowIndex][2] = resultSet.getString("Item_Name");
                dataForTableViewAllRecords[rowIndex][3] = resultSet.getString("Price");
                dataForTableViewAllRecords[rowIndex][4] = resultSet.getString("Quantity");
                dataForTableViewAllRecords[rowIndex][5] = resultSet.getString("CatagoryID");
                dataForTableViewAllRecords[rowIndex][6] = resultSet.getString("SupplierID");
                rowIndex++;
            }
            statement.close();
        }
        catch( Exception e )
        {
            System.out.println(""+e);

        }
        jTableVIEWALLITEM.setModel(new javax.swing.table.DefaultTableModel(
        dataForTableViewAllRecords, tableHeadings));

        jTableVIEWALLITEM.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));

        jTableVIEWALLITEM.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
    }//GEN-LAST:event_jMenuItemviewItemallrecord4ActionPerformed

    private void jMenuItemviewInvoiceallrecord5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemviewInvoiceallrecord5ActionPerformed
        jInternalFrameMainmenu.setVisible(false);
        jInternalFrameVIEWALLBILLRECORD.setVisible(true);
        String tableHeadings[]={"Sr.No","InvoiceNo","Date","Customer Name","Item Name","Price","Quantity","Total Price"};
        try
        {
            DatabaseConnectivity  databaseConnectivity = new DatabaseConnectivity();
            conn = databaseConnectivity.getDatabaseConnectivity();
            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery("Select * from Invoice");
            int rows = 0;
            while(resultSet.next())
            {
                rows++;
            }

            dataForTableViewAllRecords = new Object[rows][8];
            resultSet = statement.executeQuery("SELECT * from Invoice");
            int rowIndex = 0;
            while(resultSet.next())
            {
                dataForTableViewAllRecords[rowIndex][0] = rowIndex + 1;
                dataForTableViewAllRecords[rowIndex][1] = resultSet.getString("InvoiceNo");
                dataForTableViewAllRecords[rowIndex][2] = resultSet.getString("Invoice_Date");
                dataForTableViewAllRecords[rowIndex][3] = resultSet.getString("Customer_Name");
                dataForTableViewAllRecords[rowIndex][4] = resultSet.getString("Item_Name");
                dataForTableViewAllRecords[rowIndex][5] = resultSet.getString("Price");
                dataForTableViewAllRecords[rowIndex][6] = resultSet.getString("Quatity");
                dataForTableViewAllRecords[rowIndex][7] = resultSet.getString("TotalPrice");
                rowIndex++;
            }
            statement.close();
        }
        catch( Exception e )
        {
            System.out.println(""+e);

        }
        jTableVIEWALLBillRECORD.setModel(new javax.swing.table.DefaultTableModel(
        dataForTableViewAllRecords, tableHeadings));

        jTableVIEWALLBillRECORD.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));

        jTableVIEWALLBillRECORD.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
    }//GEN-LAST:event_jMenuItemviewInvoiceallrecord5ActionPerformed

    private void jMenuItemviewSupplierrallrecord6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemviewSupplierrallrecord6ActionPerformed
        jInternalFrameMainmenu.setVisible(false);
        jInternalFrameVIEWSUPPLIERRECORD.setVisible(true);
        String tableHeadings[]={"Sr.No","Supplier ID","Supplier Name","Address","ContactNo","Gender"};
        try
        {
            DatabaseConnectivity  databaseConnectivity = new DatabaseConnectivity();
            conn = databaseConnectivity.getDatabaseConnectivity();
            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery("Select * from Supplier");
            int rows = 0;
            while(resultSet.next())
            {
                rows++;
            }

            dataForTableViewAllRecords = new Object[rows][6];
            resultSet = statement.executeQuery("SELECT * from Supplier");
            int rowIndex = 0;
            while(resultSet.next())
            {
                dataForTableViewAllRecords[rowIndex][0] = rowIndex + 1;
                dataForTableViewAllRecords[rowIndex][1] = resultSet.getString("SupplierID");
                dataForTableViewAllRecords[rowIndex][2] = resultSet.getString("Supplier_Name");
                dataForTableViewAllRecords[rowIndex][3] = resultSet.getString("S_Address");
                dataForTableViewAllRecords[rowIndex][4] = resultSet.getString("ContactNO");
                dataForTableViewAllRecords[rowIndex][5] = resultSet.getString("Gender");
                rowIndex++;
            }
            statement.close();
        }
        catch( Exception e )
        {
            System.out.println(""+e);

        }
        jTableVIEWALLESUPPLIER.setModel(new javax.swing.table.DefaultTableModel(
        dataForTableViewAllRecords, tableHeadings));

        jTableVIEWALLESUPPLIER.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));

        jTableVIEWALLESUPPLIER.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
    }//GEN-LAST:event_jMenuItemviewSupplierrallrecord6ActionPerformed

    private void jMenuItemviewEmployeeallrecord7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemviewEmployeeallrecord7ActionPerformed
        jInternalFrameMainmenu.setVisible(false);
        jInternalFrameEmployeeRecord.setVisible(true);
        String tableHeadings[]={"Sr.No","Employee ID","Employee Name","ContactNo","City","Email","Gender","Title"};
        try
        {
            DatabaseConnectivity  databaseConnectivity = new DatabaseConnectivity();
            conn = databaseConnectivity.getDatabaseConnectivity();
            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery("Select * from Employee");
            int rows = 0;
            while(resultSet.next())
            {
                rows++;
            }

            dataForTableViewAllRecords = new Object[rows][8];
            resultSet = statement.executeQuery("SELECT * from Employee");
            int rowIndex = 0;
            while(resultSet.next())
            {
                dataForTableViewAllRecords[rowIndex][0] = rowIndex + 1;
                dataForTableViewAllRecords[rowIndex][1] = resultSet.getString("EmployeeID");
                dataForTableViewAllRecords[rowIndex][2] = resultSet.getString("Employee_Name");
                dataForTableViewAllRecords[rowIndex][3] = resultSet.getString("ContactNo");
                dataForTableViewAllRecords[rowIndex][4] = resultSet.getString("City");
                dataForTableViewAllRecords[rowIndex][5] = resultSet.getString("Email");
                dataForTableViewAllRecords[rowIndex][6] = resultSet.getString("Gender");
                dataForTableViewAllRecords[rowIndex][7] = resultSet.getString("Title");
                rowIndex++;
            }
            statement.close();
        }
        catch( Exception e )
        {
            System.out.println(""+e);

        }
        jTableVIEWALLEMPLOYEETABLE.setModel(new javax.swing.table.DefaultTableModel(
        dataForTableViewAllRecords, tableHeadings));

        jTableVIEWALLEMPLOYEETABLE.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));

        jTableVIEWALLEMPLOYEETABLE.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
    }//GEN-LAST:event_jMenuItemviewEmployeeallrecord7ActionPerformed

    private void jMenuItemPayDetails5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPayDetails5ActionPerformed
        jInternalFrameMainmenu.setVisible(false);
        jInternalLogin.setVisible(true);
        jTextFieldusername.setText("");
        jTextFieldpassword.setText("");
    }//GEN-LAST:event_jMenuItemPayDetails5ActionPerformed

    private void jComboBoxsearchcustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxsearchcustomerActionPerformed
        String selectitem=""+jComboBoxsearchcustomer.getSelectedItem();
        jLabel27.setText("Enter "+selectitem);
    }//GEN-LAST:event_jComboBoxsearchcustomerActionPerformed

    private void jButtonsearchCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonsearchCustomerActionPerformed
        String selectItem=""+jComboBoxsearchcustomer.getSelectedItem();
        String selectValue=jTextFieldsearchCustomer.getText();
        try
        {
            DatabaseConnectivity db=new DatabaseConnectivity();
            Connection conn=db.getDatabaseConnectivity();
            Statement stat=conn.createStatement();
            ResultSet rs=stat.executeQuery("SELECT * FROM Customer WHERE "+selectItem+"='"+selectValue+"'");
            if(rs.next())
            {
                jTextFieldcustomerID.setText(rs.getString("CustomerID"));
                jTextFieldCustomerName.setText(rs.getString("Customer_Name"));
                jTextAreaaddresscustomer.setText(rs.getString("C_Address"));
                jTextFieldContactNo.setText(rs.getString("ContactNo"));
                jTextFieldCity.setText(rs.getString("City"));
                jTextFieldEmail.setText(rs.getString("Email"));
                jTextFieldcustomerItemID.setText(rs.getString("ItemID"));

            }
            else
            {
                JOptionPane.showMessageDialog(null,"Not Found this Record");
            }
        }
        catch(Exception e)
        {
            System.err.print(e.getMessage());
        }
    }//GEN-LAST:event_jButtonsearchCustomerActionPerformed

    private void jButtonaddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonaddCustomerActionPerformed
        String cID=jTextFieldcustomerID.getText();
        String cName=jTextFieldCustomerName.getText();
        String cAddress=jTextAreaaddresscustomer.getText();
        String cContactNo=jTextFieldContactNo.getText();
        String cCity=jTextFieldCity.getText();
        String cEmail=jTextFieldEmail.getText();
        String cItem=jTextFieldcustomerItemID.getText();
        try
        {
                  if(!Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$",jTextFieldEmail.getText()))
                 {
                      JOptionPane.showMessageDialog(null,"Plz Enter Valid Email!");
      
                 }
            DatabaseConnectivity db=new DatabaseConnectivity();
            conn=db.getDatabaseConnectivity();
            Statement stat=conn.createStatement();
            ResultSet rs=stat.executeQuery("SELECT CustomerID FROM Customer WHERE CustomerID='"+cID+"'");
            if(rs.next()==true)
            {
                JOptionPane.showMessageDialog(null,"CustomerID is already Exist,Plz insert New CustomerID");
                jTextFieldcustomerID.setText("");
                
            }
            else
            {
            int rowsAffected=stat.executeUpdate("INSERT INTO Customer VALUES('"+cID+"','"+cName+"','"+cAddress+"','"+cContactNo+"','"+cCity+"','"+cEmail+"','"+cItem+"')");
            if(rowsAffected>0)
            {
                int userOptionToContinueNewCatagory = JOptionPane.showConfirmDialog(null,"One record has been saved in your system database, do you want to add more records?");
                if(userOptionToContinueNewCatagory==0)
                {
                    jTextFieldcustomerID.setText("");
                    jTextFieldCustomerName.setText("");
                    jTextAreaaddresscustomer.setText("");
                    jTextFieldContactNo.setText("");
                    jTextFieldCity.setText("");
                    jTextFieldEmail.setText("");
                    jTextFieldcustomerItemID.setText("");

                }
                else
                {
                    jTextFieldcustomerID.setText("");
                    jTextFieldCustomerName.setText("");
                    jTextAreaaddresscustomer.setText("");
                    jTextFieldContactNo.setText("");
                    jTextFieldCity.setText("");
                    jTextFieldEmail.setText("");
                    jTextFieldcustomerItemID.setText("");

                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record not saved,plz contact Developer");
            }
             DefaultTableModel model=(DefaultTableModel) jTablecustomerTable.getModel();
             model.addRow(new Object[]{cID,cName,cAddress,cContactNo,cCity,cEmail,cItem});
            }
            

        }
        catch(Exception e)
        {
            System.err.println(e);
        }
    
    }//GEN-LAST:event_jButtonaddCustomerActionPerformed

    private void jButtonBackMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackMenuActionPerformed
        jInternalFrameAddCustomer1.setVisible(false);
        jInternalFrameMainmenu.setVisible(true);
    }//GEN-LAST:event_jButtonBackMenuActionPerformed

    private void jButtonaddpayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonaddpayActionPerformed
        String payTitle=jTextFieldTiltle.getText();
        String employeePay=jTextFieldSlary.getText();
        try
        {
            DatabaseConnectivity db=new DatabaseConnectivity();
            conn=db.getDatabaseConnectivity();
            Statement stat=conn.createStatement();
            int rowsAffected=stat.executeUpdate("INSERT INTO Pay VALUES('"+payTitle+"','"+employeePay+"')");
            if(rowsAffected>0)
            {
                int userOptionToContinueNewCatagory = JOptionPane.showConfirmDialog(null,"One record has been saved in your system database, do you want to add more records?");
                if(userOptionToContinueNewCatagory==0)
                {
                    jTextFieldTiltle.setText("");
                    jTextFieldSlary.setText("");
                }
                else
                {
                    //jInternalFrameaddcatagory.setVisible(false);
                    jTextFieldTiltle.setText("");
                    jTextFieldSlary.setText("");

                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record not saved,plz contact Developer");
            }
            DefaultTableModel model=(DefaultTableModel) jTablepayTABLE.getModel();
            model.addRow(new Object[]{payTitle,employeePay});

        }
        catch(Exception e)
        {
            System.err.println(e);
        }
    }//GEN-LAST:event_jButtonaddpayActionPerformed

    private void jButtonupdatepayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonupdatepayActionPerformed
         String selectItem=""+jComboBoxsearchbypay.getSelectedItem();
         String selectValue=jTextFieldsearchby.getText();
    try
    {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           int updated=stat.executeUpdate("UPDATE Pay SET Title='"+jTextFieldTiltle.getText()+"',Salary='"+jTextFieldSlary.getText()+"' where "+selectItem+"='"+selectValue+"'");
           if(updated > 0)                         
            {
                int userOptionToContinueUpdateRecords =JOptionPane.showConfirmDialog(null,"One record has been updated in your system database, do you want to update more records?");
                if(userOptionToContinueUpdateRecords == 0)
                {
                    jTextFieldTiltle.setText("");
                    jTextFieldSlary.setText("");
                    jTextFieldsearchby.setText("");
                   
                }
                else
                {
                    //jInternalFrameModifyRecord.setVisible(false);
                    jTextFieldTiltle.setText("");
                    jTextFieldSlary.setText("");
                    jTextFieldsearchby.setText("");
                    
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record was not updated!");
            }
              
               
    }
    catch(Exception e)
    {
        
    }
    }//GEN-LAST:event_jButtonupdatepayActionPerformed

    private void jButtonbackpayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonbackpayActionPerformed
        jInternalFrameaddpay.setVisible(false);
        jInternalFrameMainmenu.setVisible(true);
    }//GEN-LAST:event_jButtonbackpayActionPerformed

    private void jTextFieldCatagoryIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCatagoryIDKeyPressed
        if(evt.getKeyCode()==10)
        {
            jTextFieldCatagoryName.requestFocus(true);
        }
    }//GEN-LAST:event_jTextFieldCatagoryIDKeyPressed

    private void jComboBoxSearchCatagoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchCatagoryActionPerformed
        String selctitem=""+jComboBoxSearchCatagory.getSelectedItem();
        jLabelsearch.setText("Enter "+selctitem);
    }//GEN-LAST:event_jComboBoxSearchCatagoryActionPerformed

    private void jComboBoxSearchCatagoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxSearchCatagoryKeyPressed
        if(evt.getKeyCode()==10)
        {
            jTextFieldEnterCIDCNAME.requestFocus(true);
        }
    }//GEN-LAST:event_jComboBoxSearchCatagoryKeyPressed

    private void jTextFieldEnterCIDCNAMEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEnterCIDCNAMEKeyPressed
        if(evt.getKeyCode()==10)
        {
            jButtonsearchCatagory.doClick();
        }
    }//GEN-LAST:event_jTextFieldEnterCIDCNAMEKeyPressed

    private void jButtonsearchCatagoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonsearchCatagoryActionPerformed
       String selectItem1=""+jComboBoxSearchCatagory.getSelectedItem();
       String selectValue2=jTextFieldEnterCIDCNAME.getText();
       try
       {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           ResultSet rs=stat.executeQuery("SELECT * FROM Catagory WHERE "+selectItem1+"='"+selectValue2+"'");
           if(rs.next())
           {
              jTextFieldCatagoryID.setText(rs.getString("CatagoryID"));
              jTextFieldCatagoryName.setText(rs.getString("Catagory_Name"));
              
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Not Found this Record");
           }
       }
       catch(Exception e)
       {
           System.err.print(e.getMessage());
       }
    }//GEN-LAST:event_jButtonsearchCatagoryActionPerformed

    private void jButtondeletecatagoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtondeletecatagoryActionPerformed
        String Catagoryname=jTextFieldCatagoryName.getText();
        String ID=jTextFieldCatagoryID.getText();

            try
            {

                DatabaseConnectivity db = new DatabaseConnectivity();
                Connection connection = db.getDatabaseConnectivity();
                Statement statement = connection.createStatement();

                int deleted = statement.executeUpdate("Delete FROM Catagory WHERE Catagory_Name='"+Catagoryname+"' OR CatagoryID='"+ID+"' ");
            if(deleted > 0)                         
            {
               int userOptionToContinueDeleteCatagory = JOptionPane.showConfirmDialog(null,"One record has been Delete in your system database, do you want to delete more records?");
               if(userOptionToContinueDeleteCatagory==0)
               {
                   jTextFieldCatagoryName.setText("");
                   jTextFieldCatagoryID.setText("");
               }
               else
               {
                   //jInternalFrameaddcatagory.setVisible(false);
                     jTextFieldCatagoryName.setText("");
                     jTextFieldCatagoryID.setText("");
                   
                   
               }
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Record not Deleted, plz contact Developer!");
           }
          DefaultTableModel model=(DefaultTableModel)jTableaddCatagoryTable.getModel();
          int selectedrow=jTableaddCatagoryTable.getSelectedRow();
          model.removeRow(selectedrow);

           }
            catch( Exception e )
            {
                System.out.println(""+e);

            }
    }//GEN-LAST:event_jButtondeletecatagoryActionPerformed

    private void jButtonaddcatagoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonaddcatagoryActionPerformed
        String ID=jTextFieldCatagoryID.getText();
        String CName=jTextFieldCatagoryName.getText();
        try
        {
            DatabaseConnectivity db=new DatabaseConnectivity();
            conn=db.getDatabaseConnectivity();
            Statement stat=conn.createStatement();
            
            ResultSet rs=stat.executeQuery("SELECT CatagoryID FROM Catagory WHERE CatagoryID='"+ID+"'");
            if(rs.next()==true)
            {
                JOptionPane.showMessageDialog(null,"CatagoryID is already Exist,Plz insert New CatagoryID");
                jTextFieldCatagoryID.setText("");
                
            }
             else
             {
                 int rowsAffected=stat.executeUpdate("INSERT INTO Catagory VALUES('"+ID+"','"+CName+"')");
             
            if(rowsAffected>0)
            {
                int userOptionToContinueNewCatagory = JOptionPane.showConfirmDialog(null,"One record has been saved in your system database, do you want to add more records?");
                if(userOptionToContinueNewCatagory==0)
                {
                    jTextFieldCatagoryID.setText("");
                    jTextFieldCatagoryName.setText("");
                }
                else
                {
                    //jInternalFrameaddcatagory.setVisible(false);
                    jTextFieldCatagoryID.setText("");
                    jTextFieldCatagoryName.setText("");

                }
            }
            
            else 
            {
                JOptionPane.showMessageDialog(null,"Record not saved,plz contact Developer");
            }
            DefaultTableModel model=(DefaultTableModel) jTableaddCatagoryTable.getModel();
            model.addRow(new Object[]{ID,CName});
            }
            
            
             
        }
        catch(Exception e)
        {
            System.err.println(e);
        }
    }//GEN-LAST:event_jButtonaddcatagoryActionPerformed

    private void jButtonupdatecatagoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonupdatecatagoryActionPerformed
         String selectItem=""+jComboBoxSearchCatagory.getSelectedItem();
         String selectValue=jTextFieldEnterCIDCNAME.getText();
    try
    {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           int updated=stat.executeUpdate("UPDATE Catagory SET CatagoryID='"+jTextFieldCatagoryID.getText()+"',Catagory_Name='"+jTextFieldCatagoryName.getText()+"' where "+selectItem+"='"+selectValue+"'");
           if(updated > 0)                         
            {
                int userOptionToContinueUpdateRecords =JOptionPane.showConfirmDialog(null,"One record has been updated in your system database, do you want to update more records?");
                if(userOptionToContinueUpdateRecords == 0)
                {
                    jTextFieldCatagoryID.setText("");
                    jTextFieldCatagoryName.setText("");
                    jTextFieldEnterCIDCNAME.setText("");
                   
                }
                else
                {
                    //jInternalFrameModifyRecord.setVisible(false);
                    jTextFieldCatagoryID.setText("");
                    jTextFieldCatagoryName.setText("");
                    jTextFieldEnterCIDCNAME.setText("");
                    
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record was not updated!");
            }
              
               
    }
    catch(Exception e)
    {
        
    }
    }//GEN-LAST:event_jButtonupdatecatagoryActionPerformed

    private void jButtonbackmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonbackmenuActionPerformed
        jInternalFrameMainmenu.setVisible(true);
        jInternalFrameAddCatagory.setVisible(false);
        
    }//GEN-LAST:event_jButtonbackmenuActionPerformed

    private void jTextFieldEmployeeEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmployeeEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEmployeeEmailActionPerformed

    private void jButtonaddemployee1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonaddemployee1ActionPerformed
        String eID=jTextFieldemployeeID.getText();
        String eName=jTextFieldEmpoyeeName.getText();
        String eContactNo=jTextFieldEmployeeConatct.getText();
        String eCity=jTextFieldEmployeeCity.getText();
        String eEmail=jTextFieldEmployeeEmail.getText();
        String eGender=""+jComboBoxgender.getSelectedItem();
        String eTitle=jTextFieldTitle.getText();
        
       try
       {
           if(!Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$",jTextFieldEmail.getText()))
                 {
                      JOptionPane.showMessageDialog(null,"Plz Enter Valid Email!");
      
                 }
           
           DatabaseConnectivity db=new DatabaseConnectivity();
           conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           ResultSet rs=stat.executeQuery("SELECT EmployeeID FROM Employee WHERE EmployeeID='"+eID+"'");
           if(rs.next()==true)
            {
                JOptionPane.showMessageDialog(null,"EmployeeID is already Exist,Plz insert New EmployeeID");
                jTextFieldemployeeID.setText("");
                
            }
           else
           {
           int rowsAffected=stat.executeUpdate("INSERT INTO Employee VALUES('"+eID+"','"+eName+"','"+eContactNo+"','"+eCity+"','"+eEmail+"','"+eGender+"','"+eTitle+"')");
           if(rowsAffected>0)
           {
               int userOptionToContinueNewCatagory = JOptionPane.showConfirmDialog(null,"One record has been saved in your system database, do you want to add more records?");
               if(userOptionToContinueNewCatagory==0)
               {
                   jTextFieldemployeeID.setText("");
                   jTextFieldEmpoyeeName.setText("");
                   jTextFieldEmployeeConatct.setText("");
                   jTextFieldEmployeeCity.setText("");
                   jTextFieldEmployeeEmail.setText("");
                   jTextFieldEmail.setText("");
                   jTextFieldTitle.setText("");
                   
               }
               else
               {
                   jTextFieldemployeeID.setText("");
                   jTextFieldEmpoyeeName.setText("");
                   jTextFieldEmployeeConatct.setText("");
                   jTextFieldEmployeeCity.setText("");
                   jTextFieldEmployeeEmail.setText("");
                   jTextFieldEmail.setText("");
                   jTextFieldTitle.setText("");
                   
               }
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Record not saved,plz contact Developer");
           }
           DefaultTableModel model=(DefaultTableModel) jTableaddEmployee.getModel();
           model.addRow(new Object[]{eID,eName,eContactNo,eCity,eEmail,eGender,eTitle});
           }
           
                       
       }
       catch(Exception e)
       {
           System.err.println(e);
       }     
    }//GEN-LAST:event_jButtonaddemployee1ActionPerformed

    private void jButtonback1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonback1ActionPerformed
        jInternalFrameMainmenu.setVisible(true);
        jInternalFrameaddEmployee.setVisible(false);        
    }//GEN-LAST:event_jButtonback1ActionPerformed

    private void jButtonbackMainu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonbackMainu1ActionPerformed
        jInternalFrameMainmenu.setVisible(true);
        jInternalFrameaddSupllier.setVisible(false);
    }//GEN-LAST:event_jButtonbackMainu1ActionPerformed

    private void jButtonbackmainmenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonbackmainmenu1ActionPerformed
        jInternalFrameMainmenu.setVisible(true);
        jInternalFrameAddStock.setVisible(false);
    }//GEN-LAST:event_jButtonbackmainmenu1ActionPerformed

    private void jButtonbackMAINMENU1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonbackMAINMENU1ActionPerformed
        jInternalFrameMainmenu.setVisible(true);
        jInternalFrameAddITEM.setVisible(false);
    }//GEN-LAST:event_jButtonbackMAINMENU1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jInternalFrameMainmenu.setVisible(true);
        jInternalFrameINVOICE.setVisible(false);
        jTextAreaprint.setText("");
        jTextFieldinvoiceNo.setText("");
        jTextFieldDate.setText("");
        jTextFieldcustomerNAME.setText("");
        jTextFieldOTEMNAME.setText("");
        jTextFieldPricePERUnit.setText("");
        jTextFieldQuantity.setText("");
        jTextFieldTotalPrice.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtondeletepayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtondeletepayActionPerformed
        String tName=jTextFieldTiltle.getText();
        String employeeSalary=jTextFieldSlary.getText();

            try
            {

                DatabaseConnectivity db = new DatabaseConnectivity();
                Connection connection = db.getDatabaseConnectivity();
                Statement statement = connection.createStatement();

                int deleted = statement.executeUpdate("Delete FROM Pay WHERE Title='"+tName+"' OR Salary='"+employeeSalary+"' ");
            if(deleted > 0)                         
            {
               int userOptionToContinueDeleteCatagory = JOptionPane.showConfirmDialog(null,"One record has been Delete in your system database, do you want to delete more records?");
               if(userOptionToContinueDeleteCatagory==0)
               {
                   jTextFieldTiltle.setText("");
                   jTextFieldSlary.setText("");
               }
               else
               {
                   //jInternalFrameaddcatagory.setVisible(false);
                     jTextFieldTiltle.setText("");
                     jTextFieldSlary.setText("");
                   
                   
               }
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Record not Deleted, plz contact Developer!");
           }
          DefaultTableModel model=(DefaultTableModel)jTablepayTABLE.getModel();
          int selectedrow=jTablepayTABLE.getSelectedRow();
          model.removeRow(selectedrow);

           }
            catch( Exception e )
            {
                System.out.println(""+e);

            }
    }//GEN-LAST:event_jButtondeletepayActionPerformed

    private void jButtonsearchPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonsearchPayActionPerformed
        String selectItem1=""+jComboBoxsearchbypay.getSelectedItem();
        String selectValue2=jTextFieldsearchby.getText();
       try
       {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           ResultSet rs=stat.executeQuery("SELECT * FROM Pay WHERE "+selectItem1+"='"+selectValue2+"'");
           if(rs.next())
           {
              jTextFieldTiltle.setText(rs.getString("Title"));
              jTextFieldSlary.setText(rs.getString("Salary"));
              
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Not Found this Record");
           }
       }
       catch(Exception e)
       {
           System.err.print(e.getMessage());
       }
    }//GEN-LAST:event_jButtonsearchPayActionPerformed

    private void jComboBoxsearchbypayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxsearchbypayActionPerformed
        String selctitem=""+jComboBoxsearchbypay.getSelectedItem();
        jLabel30.setText("Enter "+selctitem);        
    }//GEN-LAST:event_jComboBoxsearchbypayActionPerformed

    private void jButtonaddSupplier1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonaddSupplier1ActionPerformed
        String sID=jTextFieldsupplierID1.getText();
        String sName=jTextFieldSupplierName1.getText();
        String sAddress=jTextAreaAddressSupplier1.getText();
        String sContactNo=jTextFieldsupplierContactNo1.getText();
        String sGender=""+jComboBoxgenderSuplier1.getSelectedItem();
        try
        {
            DatabaseConnectivity db=new DatabaseConnectivity();
            conn=db.getDatabaseConnectivity();
            Statement stat=conn.createStatement();
            ResultSet rs=stat.executeQuery("SELECT SupplierID FROM Supplier WHERE SupplierID='"+sID+"'");
           if(rs.next()==true)
            {
                JOptionPane.showMessageDialog(null,"SupplierID is already Exist,Plz insert New SupplierID");
                jTextFieldsupplierID1.setText("");
                
            }
           else
           {
            int rowsAffected=stat.executeUpdate("INSERT INTO Supplier VALUES('"+sID+"','"+sName+"','"+sAddress+"','"+sContactNo+"','"+sGender+"')");
            if(rowsAffected>0)
            {
                int userOptionToContinueNewCatagory = JOptionPane.showConfirmDialog(null,"One record has been saved in your system database, do you want to add more records?");
                if(userOptionToContinueNewCatagory==0)
                {
                    jTextFieldsupplierID1.setText("");
                    jTextFieldSupplierName1.setText("");
                    jTextAreaAddressSupplier1.setText("");
                    jTextFieldsupplierContactNo1.setText("");
                }
                else
                {
                    jTextFieldsupplierID1.setText("");
                    jTextFieldSupplierName1.setText("");
                    jTextAreaAddressSupplier1.setText("");
                    jTextFieldsupplierContactNo1.setText("");

                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record not saved,plz contact Developer");
            }
            DefaultTableModel model=(DefaultTableModel) jTableSupplierTable1.getModel();
            model.addRow(new Object[]{sID,sName,sAddress,sContactNo,sGender});
           }
            

        }
        catch(Exception e)
        {
            System.err.println(e);
        }        
    }//GEN-LAST:event_jButtonaddSupplier1ActionPerformed

    private void jButtonAddItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddItem1ActionPerformed
        String iID=jTextFieldItemID1.getText();
        String iName=jTextFieldItemName1.getText();
        String iPrice=jTextFieldItemPrice1.getText();
        String iQuantity=jTextFielditemQuantity1.getText();
        String catagoryID=jTextFieldcatagoryIDItem1.getText();
        String supplierID=jTextFieldSupplierIDItem1.getText();
        try
        {
            DatabaseConnectivity db=new DatabaseConnectivity();
            conn=db.getDatabaseConnectivity();
            Statement stat=conn.createStatement();
            ResultSet rs=stat.executeQuery("SELECT ItemID FROM Item WHERE ItemID='"+iID+"'");
            if(rs.next()==true)
            {
                JOptionPane.showMessageDialog(null,"ItemID is already Exist,Plz insert New ItemID");
                jTextFieldItemID1.setText("");
                
            }
            else
            {
            int rowsAffected=stat.executeUpdate("INSERT INTO Item VALUES('"+iID+"','"+iName+"','"+iPrice+"','"+iQuantity+"','"+catagoryID+"','"+supplierID+"')");
            if(rowsAffected>0)
            {
                int userOptionToContinueNewCatagory = JOptionPane.showConfirmDialog(null,"One record has been saved in your system database, do you want to add more records?");
                if(userOptionToContinueNewCatagory==0)
                {
                    jTextFieldItemID1.setText("");
                    jTextFieldItemName1.setText("");
                    jTextFieldItemPrice1.setText("");
                    jTextFielditemQuantity1.setText("");
                    jTextFieldcatagoryIDItem1.setText("");
                    jTextFieldSupplierIDItem1.setText("");
                }
                else
                {
                    jTextFieldItemID1.setText("");
                    jTextFieldItemName1.setText("");
                    jTextFieldItemPrice1.setText("");
                    jTextFielditemQuantity1.setText("");
                    jTextFieldcatagoryIDItem1.setText("");
                    jTextFieldSupplierIDItem1.setText("");

                }
                
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record not saved,plz contact Developer");
            }
            DefaultTableModel model=(DefaultTableModel) jTableItemTABLE1.getModel();
            model.addRow(new Object[]{iID,iName,iPrice,iQuantity,catagoryID,supplierID});
            }
            

        }
        catch(Exception e)
        {
            System.err.println(e);
        }               
    }//GEN-LAST:event_jButtonAddItem1ActionPerformed

    private void jButtonDeleteStock1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteStock1ActionPerformed
        String sID=jTextFieldstockID1.getText();
        String sName=jTextFieldstockName1.getText();

            try
            {

                DatabaseConnectivity db = new DatabaseConnectivity();
                Connection connection = db.getDatabaseConnectivity();
                Statement statement = connection.createStatement();

                int deleted = statement.executeUpdate("Delete FROM Stock WHERE StockID='"+sID+"'");
            if(deleted > 0)                         
            {
               int userOptionToContinueDeleteCatagory = JOptionPane.showConfirmDialog(null,"One record has been Delete in your system database, do you want to delete more records?");
               if(userOptionToContinueDeleteCatagory==0)
               {
                    jTextFieldstockID1.setText("");
                    jTextFieldstockName1.setText("");
               }
               else
               {
                    jTextFieldstockID1.setText("");
                    jTextFieldstockName1.setText("");
               }
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Record not Deleted, plz contact Developer!");
           }
          DefaultTableModel model=(DefaultTableModel)jTableStockTable1.getModel();
          int selectedrow=jTableStockTable1.getSelectedRow();
          model.removeRow(selectedrow);

           }
            catch( Exception e )
            {
                System.out.println(""+e);

            }
    }//GEN-LAST:event_jButtonDeleteStock1ActionPerformed

    private void jButtonDeleteSupplier1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteSupplier1ActionPerformed
        String sID=jTextFieldsupplierID1.getText();
        String sName=jTextFieldSupplierName1.getText();
        String sContactNo=jTextFieldsupplierContactNo1.getText();

            try
            {

                DatabaseConnectivity db = new DatabaseConnectivity();
                Connection connection = db.getDatabaseConnectivity();
                Statement statement = connection.createStatement();

                int deleted = statement.executeUpdate("Delete FROM Supplier WHERE SupplierID='"+sID+"' OR Supplier_Name='"+sName+"' OR ContactNO='"+sContactNo+"'");
            if(deleted > 0)                         
            {
               int userOptionToContinueDeleteCatagory = JOptionPane.showConfirmDialog(null,"One record has been Delete in your system database, do you want to delete more records?");
               if(userOptionToContinueDeleteCatagory==0)
               {
                    jTextFieldsupplierID1.setText("");
                    jTextFieldSupplierName1.setText("");
                    jTextFieldsupplierContactNo1.setText("");
               }
               else
               {
                    jTextFieldsupplierID1.setText("");
                    jTextFieldSupplierName1.setText("");
                    jTextFieldsupplierContactNo1.setText("");
               }
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Record not Deleted, plz contact Developer!");
           }
          DefaultTableModel model=(DefaultTableModel)jTableSupplierTable1.getModel();
          int selectedrow=jTableSupplierTable1.getSelectedRow();
          model.removeRow(selectedrow);

           }
            catch( Exception e )
            {
                System.out.println(""+e);

            }
    }//GEN-LAST:event_jButtonDeleteSupplier1ActionPerformed

    private void jComboBoxsupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxsupplierActionPerformed
        String selctitem=""+jComboBoxsupplier.getSelectedItem();
        jLabel92.setText("Enter "+selctitem);
    }//GEN-LAST:event_jComboBoxsupplierActionPerformed

    private void jButtonsearchSupplier1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonsearchSupplier1ActionPerformed
       String selectItem1=""+jComboBoxsupplier.getSelectedItem();
       String selectValue2=jTextFieldsearchsuppliercmbo1.getText();
       try
       {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           ResultSet rs=stat.executeQuery("SELECT * FROM Supplier WHERE "+selectItem1+"='"+selectValue2+"'");
           if(rs.next())
           {
              jTextFieldsupplierID1.setText(rs.getString("SupplierID"));
              jTextFieldSupplierName1.setText(rs.getString("Supplier_Name"));
              jTextAreaAddressSupplier1.setText(rs.getString("S_Address"));
              jTextFieldsupplierContactNo1.setText(rs.getString("ContactNO"));
              jComboBoxgenderSuplier1.setSelectedItem(rs.getString("Gender"));
              
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Not Found this Record");
           }
       }
       catch(Exception e)
       {
           System.err.print(e.getMessage());
       }
    }//GEN-LAST:event_jButtonsearchSupplier1ActionPerformed

    private void jButtonupdateSupplier1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonupdateSupplier1ActionPerformed
         String selectItem=""+jComboBoxsupplier.getSelectedItem();
         String selectValue=jTextFieldsearchsuppliercmbo1.getText();
    try
    {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           int updated=stat.executeUpdate("UPDATE Supplier SET SupplierID='"+jTextFieldsupplierID1.getText()+"',Supplier_Name='"+jTextFieldSupplierName1.getText()+"',S_Address='"+jTextAreaAddressSupplier1.getText()+"',ContactNO='"+jTextFieldsupplierContactNo1.getText()+"',Gender='"+jComboBoxgenderSuplier1.getSelectedItem()+"' where "+selectItem+"='"+selectValue+"'");
           if(updated > 0)                         
            {
                int userOptionToContinueUpdateRecords =JOptionPane.showConfirmDialog(null,"One record has been updated in your system database, do you want to update more records?");
                if(userOptionToContinueUpdateRecords == 0)
                {
                    jTextFieldsupplierID1.setText("");
                    jTextFieldSupplierName1.setText("");
                    jTextAreaAddressSupplier1.setText("");
                    jTextFieldsupplierContactNo1.setText("");
                    jComboBoxsupplier.setSelectedItem("");
                    jTextFieldsearchsuppliercmbo1.setText("");
                   
                }
                else
                {
                    //jInternalFrameModifyRecord.setVisible(false);
                    jTextFieldsupplierID1.setText("");
                    jTextFieldSupplierName1.setText("");
                    jTextAreaAddressSupplier1.setText("");
                    jTextFieldsupplierContactNo1.setText("");
                    jComboBoxsupplier.setSelectedItem("");
                    jTextFieldEnterCIDCNAME.setText("");
                    
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record was not updated!");
            }
              
               
    }
    catch(Exception e)
    {
        
    }
    }//GEN-LAST:event_jButtonupdateSupplier1ActionPerformed

    private void jButtonDeleteItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteItem1ActionPerformed
        String iID=jTextFieldItemID1.getText();
        String iName=jTextFieldItemName1.getText();
        try
        {
                DatabaseConnectivity db = new DatabaseConnectivity();
                Connection connection = db.getDatabaseConnectivity();
                Statement statement = connection.createStatement();

                int deleted = statement.executeUpdate("Delete FROM Item WHERE ItemID='"+iID+"' OR Item_Name='"+iName+"'");
            if(deleted > 0)                         
            {
               int userOptionToContinueDeleteCatagory = JOptionPane.showConfirmDialog(null,"One record has been Delete in your system database, do you want to delete more records?");
               if(userOptionToContinueDeleteCatagory==0)
               {
                    jTextFieldItemID1.setText("");
                    jTextFieldItemName1.setText("");
               }
               else
               {
                    jTextFieldItemID1.setText("");
                    jTextFieldItemName1.setText("");
                    jTextFieldsupplierContactNo1.setText("");
               }
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Record not Deleted, plz contact Developer!");
           }
          DefaultTableModel model=(DefaultTableModel)jTableItemTABLE1.getModel();
          int selectedrow=jTableItemTABLE1.getSelectedRow();
          model.removeRow(selectedrow);

        }
        catch( Exception e )
        {
                System.out.println(""+e);

        }
    }//GEN-LAST:event_jButtonDeleteItem1ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        String selctitem=""+jComboBox4.getSelectedItem();
        jLabel107.setText("Enter "+selctitem);
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jButtonsearchItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonsearchItem1ActionPerformed
         String selectItem1=""+jComboBox4.getSelectedItem();
         String selectValue2=jTextFieldsearchcmbofield1.getText();
       try
       {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           ResultSet rs=stat.executeQuery("SELECT * FROM Item WHERE "+selectItem1+"='"+selectValue2+"'");
           if(rs.next())
           {
              jTextFieldItemID1.setText(rs.getString("ItemID"));
              jTextFieldItemName1.setText(rs.getString("Item_Name"));
              jTextFieldItemPrice1.setText(rs.getString("Price"));
              jTextFielditemQuantity1.setText(rs.getString("Quantity"));
              jTextFieldcatagoryIDItem1.setText(rs.getString("CatagoryID"));
              jTextFieldSupplierIDItem1.setText(rs.getString("SupplierID"));
              
              
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Not Found this Record");
           }
       }
       catch(Exception e)
       {
           System.err.print(e.getMessage());
       }
    }//GEN-LAST:event_jButtonsearchItem1ActionPerformed

    private void jButtonUpdateItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateItem1ActionPerformed
         String selectItem=""+jComboBox4.getSelectedItem();
         String selectValue=jTextFieldsearchcmbofield1.getText();
    try
    {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           int updated=stat.executeUpdate("UPDATE Item SET ItemID='"+jTextFieldItemID1.getText()+"',Item_Name='"+jTextFieldItemName1.getText()+"',Price='"+jTextFieldItemPrice1.getText()+"',Quantity='"+jTextFielditemQuantity1.getText()+"' where "+selectItem+"='"+selectValue+"'");
           if(updated > 0)                         
            {
                int userOptionToContinueUpdateRecords =JOptionPane.showConfirmDialog(null,"One record has been updated in your system database, do you want to update more records?");
                if(userOptionToContinueUpdateRecords == 0)
                {
                    jTextFieldItemID1.setText("");
                    jTextFieldItemName1.setText("");
                    jTextFieldItemPrice1.setText("");
                    jTextFielditemQuantity1.setText("");
                    jTextFieldcatagoryIDItem1.setText("");
                    jTextFieldSupplierIDItem1.setText("");
                    jTextFieldsearchcmbofield1.setText("");
                   
                }
                else
                {
                    jTextFieldItemID1.setText("");
                    jTextFieldItemName1.setText("");
                    jTextFieldItemPrice1.setText("");
                    jTextFielditemQuantity1.setText("");
                    jTextFieldcatagoryIDItem1.setText("");
                    jTextFieldSupplierIDItem1.setText("");
                    jTextFieldsearchcmbofield1.setText("");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record was not updated!");
            }
              
               
    }
    catch(Exception e)
    {
        
    }
    }//GEN-LAST:event_jButtonUpdateItem1ActionPerformed

    private void jButtonAddStock1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddStock1ActionPerformed
        String sID=jTextFieldstockID1.getText();
        String sName=jTextFieldstockName1.getText();
        String sPrice=jTextFieldstockprice1.getText();
        String sQuantity=jTextFieldquantitystock1.getText();
        String iID=jTextFieldStockItemName1.getText();
        try
        {
            DatabaseConnectivity db=new DatabaseConnectivity();
            conn=db.getDatabaseConnectivity();
            Statement stat=conn.createStatement();
            ResultSet rs=stat.executeQuery("SELECT StockID FROM Stock WHERE StockID='"+sID+"'");
            if(rs.next()==true)
            {
                JOptionPane.showMessageDialog(null,"StockID is already Exist,Plz insert New StockID");
                jTextFieldstockID1.setText("");
                
            }
            else
            {
            int rowsAffected=stat.executeUpdate("INSERT INTO Stock VALUES('"+sID+"','"+sName+"','"+sQuantity+"','"+sPrice+"','"+iID+"')");
            if(rowsAffected>0)
            {
                int userOptionToContinueNewCatagory = JOptionPane.showConfirmDialog(null,"One record has been saved in your system database, do you want to add more records?");
                if(userOptionToContinueNewCatagory==0)
                {
                    jTextFieldstockID1.setText("");
                    jTextFieldstockName1.setText("");
                    jTextFieldquantitystock1.setText("");
                    jTextFieldstockprice1.setText("");
                    jTextFieldStockItemName1.setText("");
                }
                else
                {
                    jTextFieldstockID1.setText("");
                    jTextFieldstockName1.setText("");
                    jTextFieldquantitystock1.setText("");
                    jTextFieldstockprice1.setText("");
                    jTextFieldStockItemName1.setText("");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record not saved,plz contact Developer");
            }
            DefaultTableModel model=(DefaultTableModel) jTableStockTable1.getModel();
            model.addRow(new Object[]{sID,sName,sQuantity,sPrice,iID});
            }
            

        }
        catch(Exception e)
        {
            System.err.println(e);
        }    
    }//GEN-LAST:event_jButtonAddStock1ActionPerformed

    private void jComboBoxsarchstock1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxsarchstock1ActionPerformed
        String selctitem=""+jComboBoxsarchstock1.getSelectedItem();
        jLabel99.setText("Enter "+selctitem);
    }//GEN-LAST:event_jComboBoxsarchstock1ActionPerformed

    private void jButtonsearchStock1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonsearchStock1ActionPerformed
        String selectItem1=""+jComboBoxsarchstock1.getSelectedItem();
        String selectValue2=jTextFieldsearctxt1.getText();
       try
       {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           ResultSet rs=stat.executeQuery("SELECT * FROM Stock WHERE "+selectItem1+"='"+selectValue2+"'");
           if(rs.next())
           {
              jTextFieldstockID1.setText(rs.getString("StockID"));
              jTextFieldstockName1.setText(rs.getString("Stock_Name"));
              jTextFieldquantitystock1.setText(rs.getString("Quantity"));
              jTextFieldstockprice1.setText(rs.getString("Price"));
              jTextFieldStockItemName1.setText(rs.getString("ItemID"));
              
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Not Found this Record");
           }
       }
       catch(Exception e)
       {
           System.err.print(e.getMessage());
       }
    }//GEN-LAST:event_jButtonsearchStock1ActionPerformed

    private void jButtonUpdateStock1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateStock1ActionPerformed
         String selectItem=""+jComboBoxsarchstock1.getSelectedItem();
         String selectValue=jTextFieldsearctxt1.getText();
    try
    {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           int updated=stat.executeUpdate("UPDATE Stock SET StockID='"+jTextFieldstockID1.getText()+"',Stock_Name='"+jTextFieldstockName1.getText()+"',Quantity='"+jTextFieldquantitystock1.getText()+"',Price='"+jTextFieldstockprice1.getText()+"' where "+selectItem+"='"+selectValue+"'");
           if(updated > 0)                         
            {
                int userOptionToContinueUpdateRecords =JOptionPane.showConfirmDialog(null,"One record has been updated in your system database, do you want to update more records?");
                if(userOptionToContinueUpdateRecords == 0)
                {
                    jTextFieldstockID1.setText("");
                    jTextFieldstockName1.setText("");
                    jTextFieldquantitystock1.setText("");
                    jTextFieldstockprice1.setText("");
                    jTextFieldStockItemName1.setText("");
                    jTextFieldsearctxt1.setText("");
                }
                else
                {
                    jTextFieldstockID1.setText("");
                    jTextFieldstockName1.setText("");
                    jTextFieldquantitystock1.setText("");
                    jTextFieldstockprice1.setText("");
                    jTextFieldStockItemName1.setText("");
                    jTextFieldsearctxt1.setText("");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record was not updated!");
            }
              
               
    }
    catch(Exception e)
    {
        
    }
    }//GEN-LAST:event_jButtonUpdateStock1ActionPerformed

    private void jButtonUpdateemployee1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateemployee1ActionPerformed
        String selectItem=""+jComboBoxsearchemployee.getSelectedItem();
         String selectValue=jTextFieldsearchtxt.getText();
    try
    {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           int updated=stat.executeUpdate("UPDATE Employee SET EmployeeID='"+jTextFieldemployeeID.getText()+"',Employee_Name='"+jTextFieldEmpoyeeName.getText()+"',ContactNo='"+jTextFieldEmployeeConatct.getText()+"',City='"+jTextFieldEmployeeCity.getText()+"',Email='"+jTextFieldEmployeeEmail.getText()+"',Gender='"+jComboBoxgender.getSelectedItem()+"',Title='"+jTextFieldTitle.getText()+"' where "+selectItem+"='"+selectValue+"'");
           if(updated > 0)                         
            {
                int userOptionToContinueUpdateRecords =JOptionPane.showConfirmDialog(null,"One record has been updated in your system database, do you want to update more records?");
                if(userOptionToContinueUpdateRecords == 0)
                {
                   jTextFieldemployeeID.setText("");
                   jTextFieldEmpoyeeName.setText("");
                   jTextFieldEmployeeConatct.setText("");
                   jTextFieldEmployeeCity.setText("");
                   jTextFieldEmployeeEmail.setText("");
                   jTextFieldEmail.setText("");
                   jTextFieldTitle.setText("");
                   jTextFieldsearchtxt.setText("");
                   
                }
                else
                {
                   jTextFieldemployeeID.setText("");
                   jTextFieldEmpoyeeName.setText("");
                   jTextFieldEmployeeConatct.setText("");
                   jTextFieldEmployeeCity.setText("");
                   jTextFieldEmployeeEmail.setText("");
                   jTextFieldEmail.setText("");
                   jTextFieldTitle.setText("");
                   jTextFieldsearchtxt.setText("");
                    
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record was not updated!");
            }
              
               
    }
    catch(Exception e)
    {
        
    }
    }//GEN-LAST:event_jButtonUpdateemployee1ActionPerformed

    private void jButtonUpdateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateCustomerActionPerformed
         String selectItem=""+jComboBoxsearchcustomer.getSelectedItem();
         String selectValue=jTextFieldsearchCustomer.getText();
    try
    {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           int updated=stat.executeUpdate("UPDATE Customer SET CustomerID='"+jTextFieldcustomerID.getText()+"',Customer_Name='"+jTextFieldCustomerName.getText()+"',C_Address='"+jTextAreaaddresscustomer.getText()+"',ContactNo='"+jTextFieldContactNo.getText()+"',City='"+jTextFieldCity.getText()+"',Email='"+jTextFieldEmail.getText()+"' where "+selectItem+"='"+selectValue+"'");
           if(updated > 0)                         
            {
                int userOptionToContinueUpdateRecords =JOptionPane.showConfirmDialog(null,"One record has been updated in your system database, do you want to update more records?");
                if(userOptionToContinueUpdateRecords == 0)
                {
                    jTextFieldcustomerID.setText("");
                    jTextFieldCustomerName.setText("");
                    jTextAreaaddresscustomer.setText("");
                    jTextFieldContactNo.setText("");
                    jTextFieldCity.setText("");
                    jTextFieldEmail.setText("");
                    jTextFieldcustomerItemID.setText("");
                    jTextFieldsearchCustomer.setText("");
                }
                else
                {
                    jTextFieldcustomerID.setText("");
                    jTextFieldCustomerName.setText("");
                    jTextAreaaddresscustomer.setText("");
                    jTextFieldContactNo.setText("");
                    jTextFieldCity.setText("");
                    jTextFieldEmail.setText("");
                    jTextFieldcustomerItemID.setText("");
                    jTextFieldsearchCustomer.setText("");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record was not updated!");
            }
              
               
    }
    catch(Exception e)
    {
        
    }
    }//GEN-LAST:event_jButtonUpdateCustomerActionPerformed

    private void jButtondeleteCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtondeleteCustomerActionPerformed
        String cID=jTextFieldcustomerID.getText();
        String cName=jTextFieldCustomerName.getText();
        String cContactNo=jTextFieldContactNo.getText();

            try
            {

                DatabaseConnectivity db = new DatabaseConnectivity();
                Connection connection = db.getDatabaseConnectivity();
                Statement statement = connection.createStatement();

                int deleted = statement.executeUpdate("Delete FROM Customer WHERE CustomerID='"+cID+"' OR Customer_Name='"+cName+"' OR ContactNo='"+cContactNo+"'");
            if(deleted > 0)                         
            {
               int userOptionToContinueDeleteCatagory = JOptionPane.showConfirmDialog(null,"One record has been Delete in your system database, do you want to delete more records?");
               if(userOptionToContinueDeleteCatagory==0)
               {
                    jTextFieldcustomerID.setText("");
                    jTextFieldCustomerName.setText("");
                     jTextFieldContactNo.setText("");
               }
               else
               {
                    jTextFieldcustomerID.setText("");
                    jTextFieldCustomerName.setText("");
                    jTextFieldContactNo.setText("");
               }
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Record not Deleted, plz contact Developer!");
           }
          DefaultTableModel model=(DefaultTableModel)jTableSupplierTable1.getModel();
          int selectedrow=jTableSupplierTable1.getSelectedRow();
          model.removeRow(selectedrow);

           }
            catch( Exception e )
            {
                System.out.println(""+e);

            }        
    }//GEN-LAST:event_jButtondeleteCustomerActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String invoiceNo=jTextFieldinvoiceNo.getText();
        String inDate=jTextFieldDate.getText();
        String inCustomerName=jTextFieldcustomerNAME.getText();
        String inItemName=jTextFieldOTEMNAME.getText();
        String inPrice=jTextFieldPricePERUnit.getText();
        String inQuantity=jTextFieldQuantity.getText();
        String inTotalPrice=jTextFieldTotalPrice.getText();
        try
        {
            jTextAreaprint.append("\n---------------------------------------------------------------------------------------------------"+
                    "\n\t    HAFIZ MOBILE CENTER JALHAN"+
                    "\n----------------------------------------------------------------------------------------------\n\n\n\n"+
                    "InvoiceNo:  "+invoiceNo+
                    "\n\nDate:  "+inDate+
                    "\n\nCustomer Name:  "+inCustomerName+
                    
                    "\n\n\n\n\n\n-------------------------------------------------------------------------------"+
                    "\nItem Name"+
                    "\t    Price"+
                    "\t    Quantity"+
                    "\n-----------------------------------------------------------------------------------------\n"+
                    inItemName+"\t  "+inPrice+"\t    "+inQuantity+
                    
                    
                    
                    "\n\n\n\t\t\t-------------------"+
                    "\n\t\t\tTotalPrice: "+inTotalPrice+
                    "\n\t\t\t-------------------"
                    
                    
                    
            );
            
            
            
            
            
            
            
            DatabaseConnectivity db=new DatabaseConnectivity();
            conn=db.getDatabaseConnectivity();
            Statement stat=conn.createStatement();
            int rowsAffected=stat.executeUpdate("INSERT INTO Invoice VALUES('"+invoiceNo+"','"+inDate+"','"+inCustomerName+"','"+inItemName+"','"+inPrice+"','"+inQuantity+"','"+inTotalPrice+"')");
            if(rowsAffected>0)
            {
                int userOptionToContinueNewCatagory = JOptionPane.showConfirmDialog(null,"Do you want to add more Items?");
                if(userOptionToContinueNewCatagory==0)
                {
                    jTextFieldPricePERUnit.setText("");
                    jTextFieldQuantity.setText("");
                    jTextFieldTotalPrice.setText("");
                    jTextFieldOTEMNAME.setText("");
                    
                }
                
                
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record not saved,plz contact Developer");
            }

        }
        catch(Exception e)
        {
            System.err.println(e);
        }        
 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextFieldQuantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantityKeyPressed
        if(evt.getKeyCode()==10)
        {
            jTextFieldTotalPrice.requestFocus(true);
            int unitPrice=Integer.parseInt(jTextFieldPricePERUnit.getText());
            int totalQuantity=Integer.parseInt(jTextFieldQuantity.getText());
            int result=unitPrice*totalQuantity;
            jTextFieldTotalPrice.setText(""+result);
            
        }
    }//GEN-LAST:event_jTextFieldQuantityKeyPressed

    private void jTextFieldTotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTotalPriceActionPerformed
      
    }//GEN-LAST:event_jTextFieldTotalPriceActionPerformed

    private void jTextFieldQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQuantityActionPerformed

    private void jButtondeleteEmployee1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtondeleteEmployee1ActionPerformed
        String eID=jTextFieldemployeeID.getText();
        String eName=jTextFieldEmpoyeeName.getText();
        String eContactNo=jTextFieldEmployeeConatct.getText();

            try
            {

                DatabaseConnectivity db = new DatabaseConnectivity();
                Connection connection = db.getDatabaseConnectivity();
                Statement statement = connection.createStatement();

                int deleted = statement.executeUpdate("Delete FROM Employee WHERE EmployeeID='"+eID+"' OR Employee_Name='"+eName+"' OR ContactNo='"+eContactNo+"'");
            if(deleted > 0)                         
            {
               int userOptionToContinueDeleteCatagory = JOptionPane.showConfirmDialog(null,"One record has been Delete in your system database, do you want to delete more records?");
               if(userOptionToContinueDeleteCatagory==0)
               {
                    jTextFieldemployeeID.setText("");
                    jTextFieldEmpoyeeName.setText("");
                    jTextFieldEmployeeConatct.setText("");
               }
               else
               {
                    jTextFieldemployeeID.setText("");
                    jTextFieldEmpoyeeName.setText("");
                    jTextFieldEmployeeConatct.setText("");
               }
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Record not Deleted, plz contact Developer!");
           }
          DefaultTableModel model=(DefaultTableModel)jTableaddEmployee.getModel();
          int selectedrow=jTableaddEmployee.getSelectedRow();
          model.removeRow(selectedrow);

           }
            catch( Exception e )
            {
                System.out.println(""+e);

            }        
    }//GEN-LAST:event_jButtondeleteEmployee1ActionPerformed

    private void jComboBoxsearchemployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxsearchemployeeActionPerformed
        String selctitem=""+jComboBoxsearchemployee.getSelectedItem();
        jLabel84.setText("Enter "+selctitem);
    }//GEN-LAST:event_jComboBoxsearchemployeeActionPerformed

    private void jButtonsearchEmployee1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonsearchEmployee1ActionPerformed
       String selectItem1=""+jComboBoxsearchemployee.getSelectedItem();
       String selectValue2=jTextFieldsearchtxt.getText();
       try
       {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           ResultSet rs=stat.executeQuery("SELECT * FROM Employee WHERE "+selectItem1+"='"+selectValue2+"'");
           if(rs.next())
           {
              jTextFieldemployeeID.setText(rs.getString("EmployeeID"));
              jTextFieldEmpoyeeName.setText(rs.getString("Employee_Name"));
              jTextFieldEmployeeConatct.setText(rs.getString("ContactNo"));
              jTextFieldEmployeeCity.setText(rs.getString("City"));
              jTextFieldEmployeeEmail.setText(rs.getString("Email"));
              jComboBoxgender.setSelectedItem(rs.getString("Gender"));
              jTextFieldTitle.setText(rs.getString("Title"));
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Not Found this Record");
           }
       }
       catch(Exception e)
       {
           System.err.print(e.getMessage());
       }
    }//GEN-LAST:event_jButtonsearchEmployee1ActionPerformed

    private void jButtonaddreparingCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonaddreparingCustomerActionPerformed
        String rID=jTextFieldreparingID.getText();
        String rName=jTextFieldCUSTOMERNAME.getText();
        String rCatagory=jTextFieldCATAGORY.getText();
        String rDetails=jTextAreaREPDETAILS.getText();
        String rReadyPending=""+jComboBoxreadypending.getSelectedItem();
        String rPrice=jTextFieldprice.getText();
        try
        {
            DatabaseConnectivity db=new DatabaseConnectivity();
            conn=db.getDatabaseConnectivity();
            Statement stat=conn.createStatement();
            ResultSet rs=stat.executeQuery("SELECT RepID FROM RepairingCustomer WHERE RepID='"+rID+"'");
            if(rs.next()==true)
            {
                JOptionPane.showMessageDialog(null,"RepairingID is already Exist,Plz insert New RepairingID");
                jTextFieldreparingID.setText("");
                
            }
            else
            {
            int rowsAffected=stat.executeUpdate("INSERT INTO RepairingCustomer VALUES('"+rID+"','"+rName+"','"+rCatagory+"','"+rDetails+"','"+rReadyPending+"','"+rPrice+"')");
            if(rowsAffected>0)
            {
                int userOptionToContinueNewCatagory = JOptionPane.showConfirmDialog(null,"One record has been saved in your system database, do you want to add more records?");
                if(userOptionToContinueNewCatagory==0)
                {
                    jTextFieldreparingID.setText("");
                    jTextFieldCUSTOMERNAME.setText("");
                    jTextFieldCATAGORY.setText("");
                    jTextAreaREPDETAILS.setText("");
                    jComboBoxreadypending.setSelectedItem("");
                    jTextFieldprice.setText("");
                }
                else
                {
                    jTextFieldreparingID.setText("");
                    jTextFieldCUSTOMERNAME.setText("");
                    jTextFieldCATAGORY.setText("");
                    jTextAreaREPDETAILS.setText("");
                    jComboBoxreadypending.setSelectedItem("");
                    jTextFieldprice.setText("");

                }
                
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record not saved,plz contact Developer");
            }
            DefaultTableModel model=(DefaultTableModel) jTablereparingTABLE.getModel();
            model.addRow(new Object[]{rID,rName,rCatagory,rDetails,rReadyPending,rPrice});
            }
            

        }
        catch(Exception e)
        {
            System.err.println(e);
        }
    }//GEN-LAST:event_jButtonaddreparingCustomerActionPerformed

    private void jMenuItemREpairingDetails2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemREpairingDetails2ActionPerformed
        jInternalFrameRepairingcustomer.setVisible(true);
        jInternalFrameMainmenu.setVisible(false);
    }//GEN-LAST:event_jMenuItemREpairingDetails2ActionPerformed

    private void jButtondeletecustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtondeletecustomerActionPerformed
        String rID=jTextFieldreparingID.getText();
        String rName=jTextFieldCUSTOMERNAME.getText();
        String rCatagory=jTextFieldCATAGORY.getText();
        try
        {
                DatabaseConnectivity db = new DatabaseConnectivity();
                Connection connection = db.getDatabaseConnectivity();
                Statement statement = connection.createStatement();

                int deleted = statement.executeUpdate("Delete FROM Repairingcustomer WHERE RepID='"+rID+"' OR Customer_Name='"+rName+"' OR Catagory='"+rCatagory+"'");
            if(deleted > 0)                         
            {
               int userOptionToContinueDeleteCatagory = JOptionPane.showConfirmDialog(null,"One record has been Delete in your system database, do you want to delete more records?");
               if(userOptionToContinueDeleteCatagory==0)
               {
                    jTextFieldreparingID.setText("");
                    jTextFieldCUSTOMERNAME.setText("");
                    jTextFieldCATAGORY.setText("");
               }
               else
               {
                    jTextFieldreparingID.setText("");
                    jTextFieldCUSTOMERNAME.setText("");
                    jTextFieldCATAGORY.setText("");
               }
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Record not Deleted, plz contact Developer!");
           }
          DefaultTableModel model=(DefaultTableModel)jTablereparingTABLE.getModel();
          int selectedrow=jTablereparingTABLE.getSelectedRow();
          model.removeRow(selectedrow);

        }
        catch( Exception e )
        {
                System.out.println(""+e);

        }
    }//GEN-LAST:event_jButtondeletecustomerActionPerformed

    private void jButtonbackReparingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonbackReparingActionPerformed
        jInternalFrameMainmenu.setVisible(true);
        jInternalFrameRepairingcustomer.setVisible(false);
    }//GEN-LAST:event_jButtonbackReparingActionPerformed

    private void jComboBoxselectsearchreparingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxselectsearchreparingActionPerformed
        String selctitem=""+jComboBoxselectsearchreparing.getSelectedItem();
        jLabel19.setText("Enter "+selctitem);
    }//GEN-LAST:event_jComboBoxselectsearchreparingActionPerformed

    private void jButtonSEARCHREAPRINGCUSTOMERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSEARCHREAPRINGCUSTOMERActionPerformed
         String selectItem1=""+jComboBoxselectsearchreparing.getSelectedItem();
         String selectValue2=jTextFieldsearchReapring.getText();
       try
       {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           ResultSet rs=stat.executeQuery("SELECT * FROM RepairingCustomer WHERE "+selectItem1+"='"+selectValue2+"'");
           if(rs.next())
           {
              jTextFieldreparingID.setText(rs.getString("RepID"));
              jTextFieldCUSTOMERNAME.setText(rs.getString("Customer_Name"));
              jTextFieldCATAGORY.setText(rs.getString("Catagory"));
              jTextAreaREPDETAILS.setText(rs.getString("Rep_detail"));
              jComboBoxreadypending.setSelectedItem(rs.getString("Rep_Status"));
              jTextFieldprice.setText(rs.getString("Price"));
              
              
           }
           else
           {
               JOptionPane.showMessageDialog(null,"Not Found this Record");
           }
       }
       catch(Exception e)
       {
           System.err.print(e.getMessage());
       }
    }//GEN-LAST:event_jButtonSEARCHREAPRINGCUSTOMERActionPerformed

    private void jButtonupdaterepairingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonupdaterepairingActionPerformed
         String selectItem1=""+jComboBoxselectsearchreparing.getSelectedItem();
         String selectValue2=jTextFieldsearchReapring.getText();
    try
    {
           DatabaseConnectivity db=new DatabaseConnectivity();
           Connection conn=db.getDatabaseConnectivity();
           Statement stat=conn.createStatement();
           int updated=stat.executeUpdate("UPDATE RepairingCustomer SET RepID='"+jTextFieldreparingID.getText()+"',Customer_Name='"+jTextFieldCUSTOMERNAME.getText()+"',Catagory='"+jTextFieldCATAGORY.getText()+"',Rep_detail='"+jTextAreaREPDETAILS.getText()+"',Rep_Status='"+jComboBoxreadypending.getSelectedItem()+"',Price='"+jTextFieldprice.getText()+"' where "+selectItem1+"='"+selectValue2+"'");
           if(updated > 0)                         
            {
                int userOptionToContinueUpdateRecords =JOptionPane.showConfirmDialog(null,"One record has been updated in your system database, do you want to update more records?");
                if(userOptionToContinueUpdateRecords == 0)
                {
                    jTextFieldreparingID.setText("");
                    jTextFieldCUSTOMERNAME.setText("");
                    jTextFieldCATAGORY.setText("");
                    jTextAreaREPDETAILS.setText("");
                    jComboBoxreadypending.setSelectedItem("");
                    jTextFieldprice.setText("");
                    jTextFieldsearchReapring.setText("");
                   
                }
                else
                {
                    jTextFieldreparingID.setText("");
                    jTextFieldCUSTOMERNAME.setText("");
                    jTextFieldCATAGORY.setText("");
                    jTextAreaREPDETAILS.setText("");
                    jComboBoxreadypending.setSelectedItem("");
                    jTextFieldprice.setText("");
                    jTextFieldsearchReapring.setText("");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record was not updated!");
            }
              
               
    }
    catch(Exception e)
    {
        
    }
    }//GEN-LAST:event_jButtonupdaterepairingActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jInternalFrameMainmenu.setVisible(true);
        jInternalFrameVIEWALLBILLRECORD.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       jInternalFrameMainmenu.setVisible(true);
        jInternalFrameVIEWITEMRECORD.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jInternalFrameMainmenu.setVisible(true);
        jInternalFrameALLSTOCKRECORD.setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        jInternalFrameMainmenu.setVisible(true);
        jInternalFrameVIEWSUPPLIERRECORD.setVisible(false);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jInternalFrameMainmenu.setVisible(true);
        jInternalFrameEmployeeRecord.setVisible(false);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
       jInternalFrameMainmenu.setVisible(true);
        jInternalFrameviewALLCustomer.setVisible(false);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButtonSIGNUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSIGNUPActionPerformed
        String username=jTextFieldEnterName.getText();
        String password=jTextFieldpasswordsignup.getText();
        String Confirmpassword=jTextFieldcnfrmPasswordSignup.getText();
        String selectOption=""+jComboBoxSelectNormalAdmin.getSelectedItem();

        if(username.equals("") && password.equals("")&&Confirmpassword.equals(""))
        {
            JOptionPane.showMessageDialog(null,"plz insert Name,Password,Confirm Password");
        }
         else if(Confirmpassword.equals("")&&password.equals(""))
        {
            JOptionPane.showMessageDialog(null,"password and Confirm Password is Missing");
        }
        else if (username.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Username is Missing");

        }
        else if(password.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Password is Missing");
        }
        else if(Confirmpassword.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Confirm Password is Missing");
        }
        
         else if(!password.equals(Confirmpassword))
        {
           JOptionPane.showMessageDialog(null,"password and Confirm password are not Matchng");
        }
        else
        {
            try
        {
            DatabaseConnectivity db=new DatabaseConnectivity();
            conn=db.getDatabaseConnectivity();
            Statement stat=conn.createStatement();
            int rowsAffected=stat.executeUpdate("INSERT INTO Login VALUES('"+username+"','"+password+"','"+selectOption+"')");
            if(rowsAffected>0)
            {
                JOptionPane.showMessageDialog(null,"Successfully Sign up!");
                jTextFieldEnterName.setText("");
                jTextFieldpasswordsignup.setText("");
                jTextFieldcnfrmPasswordSignup.setText("");
          
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Something is Wrong!");
            }


        }
        catch(Exception e)
        {
            System.err.println(e.getMessage());
        }
             
        }
    }//GEN-LAST:event_jButtonSIGNUPActionPerformed

    private void jButtonSIGNINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSIGNINActionPerformed
        jInternalLogin.setVisible(true);
        jInternalFrameSIGNUP.setVisible(false);
        jTextFieldEnterName.setText("");
        jTextFieldpasswordsignup.setText("");
        jTextFieldcnfrmPasswordSignup.setText("");
    }//GEN-LAST:event_jButtonSIGNINActionPerformed

    private void jButtonSIGNUPLOGINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSIGNUPLOGINActionPerformed
       jInternalLogin.setVisible(false);
       jInternalFrameSIGNUP.setVisible(true);
       jTextFieldpassword.setText("");
    }//GEN-LAST:event_jButtonSIGNUPLOGINActionPerformed

    private void jButtonprintinvoice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonprintinvoice1ActionPerformed
        
        try
        {
            jTextAreaprint.print();
        }
        catch(PrinterException e)
        {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_jButtonprintinvoice1ActionPerformed

    private void jTextFieldEnterNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEnterNameKeyPressed
        if(evt.getKeyCode()<59 && evt.getKeyCode()>47 )
        {
            JOptionPane.showMessageDialog(null,"Disgits are Not Allowed");
            
        }
        else if(evt.getKeyCode()==10)
        {
            jTextFieldpasswordsignup.requestFocus(true);
        }
    }//GEN-LAST:event_jTextFieldEnterNameKeyPressed

    private void jTextFieldpasswordsignupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldpasswordsignupKeyPressed
        if(evt.getKeyCode()==10)
        {
            jTextFieldcnfrmPasswordSignup.requestFocus(true);
        }
    }//GEN-LAST:event_jTextFieldpasswordsignupKeyPressed

    private void jTextFieldcnfrmPasswordSignupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldcnfrmPasswordSignupKeyPressed
        if(evt.getKeyCode()==10)
        {
            jComboBoxSelectNormalAdmin.requestFocus(true);
        }
    }//GEN-LAST:event_jTextFieldcnfrmPasswordSignupKeyPressed

    private void jComboBoxSelectNormalAdminKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxSelectNormalAdminKeyPressed
        if(evt.getKeyCode()==10)
        {
            jButtonSIGNUP.doClick();
        }
    }//GEN-LAST:event_jComboBoxSelectNormalAdminKeyPressed

    private void jTextFieldCatagoryNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCatagoryNameKeyPressed
        if(evt.getKeyCode()==10)
        {
            jButtonaddcatagory.doClick();
        }
    }//GEN-LAST:event_jTextFieldCatagoryNameKeyPressed

    private void jTextFieldcustomerIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldcustomerIDKeyPressed
       if(evt.getKeyCode()==10)
        {
            jTextFieldCustomerName.requestFocus(true);
        }
    }//GEN-LAST:event_jTextFieldcustomerIDKeyPressed

    private void jTextFieldCustomerNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCustomerNameKeyPressed
        if(evt.getKeyCode()==10)
        {
            jTextAreaaddresscustomer.requestFocus(true);
        }
    }//GEN-LAST:event_jTextFieldCustomerNameKeyPressed

    private void jTextAreaaddresscustomerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaaddresscustomerKeyPressed
       if(evt.getKeyCode()==10)
       {
           jTextFieldContactNo.requestFocus(true);
       }
    }//GEN-LAST:event_jTextAreaaddresscustomerKeyPressed

    private void jTextFieldContactNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldContactNoKeyPressed
      if(evt.getKeyCode()<97 && evt.getKeyCode()>65 )
        {
           
            JOptionPane.showMessageDialog(null,"Alphabets and Symbols are Not Allowed");
            
        }
        else if(evt.getKeyCode()==10)
        {
             jTextFieldpassword.requestFocus(true);
        }
    }//GEN-LAST:event_jTextFieldContactNoKeyPressed

    private void jTextFieldCityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCityKeyPressed
        if(evt.getKeyCode()==10)
       {
           jTextFieldEmail.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldCityKeyPressed

    private void jTextFieldEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEmailKeyPressed
if(evt.getKeyCode()==10)
       {
           jTextFieldcustomerItemID.requestFocus(true);
       }    
     
    }//GEN-LAST:event_jTextFieldEmailKeyPressed

    private void jTextFieldcustomerItemIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldcustomerItemIDKeyPressed
        if(evt.getKeyCode()==10)
       {
           jButtonaddCustomer.doClick();
       }
    }//GEN-LAST:event_jTextFieldcustomerItemIDKeyPressed

    private void jComboBoxsearchcustomerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxsearchcustomerKeyPressed
       if(evt.getKeyCode()==10)
       {
           jTextFieldsearchCustomer.requestFocus(true);
       }
           
    }//GEN-LAST:event_jComboBoxsearchcustomerKeyPressed

    private void jTextFieldsearchCustomerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldsearchCustomerKeyPressed
        if(evt.getKeyCode()==10)
       {
           jButtonsearchCustomer.doClick();
       }
    }//GEN-LAST:event_jTextFieldsearchCustomerKeyPressed

    private void jTextFieldpasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldpasswordKeyPressed
        if(evt.getKeyCode()==10)
       {
           jComboBoxnormalAdmin.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldpasswordKeyPressed

    private void jTextFieldemployeeIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldemployeeIDKeyPressed
         if(evt.getKeyCode()==10)
       {
           jTextFieldEmpoyeeName.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldemployeeIDKeyPressed

    private void jTextFieldEmpoyeeNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEmpoyeeNameKeyPressed
        if(evt.getKeyCode()==10)
       {
           jTextFieldEmployeeConatct.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldEmpoyeeNameKeyPressed

    private void jTextFieldEmployeeConatctKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEmployeeConatctKeyPressed
        if(evt.getKeyCode()<97 && evt.getKeyCode()>65 )
        {
           
            JOptionPane.showMessageDialog(null,"Alphabets and Symbols are Not Allowed");
            
        }
        else if(evt.getKeyCode()==10)
        {
             jTextFieldpassword.requestFocus(true);
        }
    }//GEN-LAST:event_jTextFieldEmployeeConatctKeyPressed

    private void jTextFieldEmployeeCityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEmployeeCityKeyPressed
          if(evt.getKeyCode()==10)
       {
           jTextFieldEmployeeEmail.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldEmployeeCityKeyPressed

    private void jTextFieldEmployeeEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEmployeeEmailKeyPressed
           if(evt.getKeyCode()==10)
       {
           jComboBoxgender.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldEmployeeEmailKeyPressed

    private void jComboBoxgenderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxgenderKeyPressed
          if(evt.getKeyCode()==10)
       {
           jTextFieldTitle.requestFocus(true);
       }
    }//GEN-LAST:event_jComboBoxgenderKeyPressed

    private void jTextFieldTitleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTitleKeyPressed
          if(evt.getKeyCode()==10)
       {
           jButtonaddemployee1.doClick();
       }
    }//GEN-LAST:event_jTextFieldTitleKeyPressed

    private void jTextFieldTiltleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTiltleKeyPressed
        if(evt.getKeyCode()==10)
       {
           jTextFieldSlary.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldTiltleKeyPressed

    private void jTextFieldSlaryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSlaryKeyPressed
       if(evt.getKeyCode()==10)
       {
           jButtonaddpay.doClick();
       }
    }//GEN-LAST:event_jTextFieldSlaryKeyPressed

    private void jTextFieldsupplierID1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldsupplierID1KeyPressed
         if(evt.getKeyCode()==10)
       {
           jTextFieldSupplierName1.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldsupplierID1KeyPressed

    private void jTextFieldSupplierName1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSupplierName1KeyPressed
         if(evt.getKeyCode()==10)
       {
           jTextAreaAddressSupplier1.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldSupplierName1KeyPressed

    private void jTextAreaAddressSupplier1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaAddressSupplier1KeyPressed
         if(evt.getKeyCode()==10)
       {
          jTextFieldsupplierContactNo1.requestFocus(true);
       }
    }//GEN-LAST:event_jTextAreaAddressSupplier1KeyPressed

    private void jTextFieldsupplierContactNo1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldsupplierContactNo1KeyPressed
        if(evt.getKeyCode()<97 && evt.getKeyCode()>65 )
        {
           
            JOptionPane.showMessageDialog(null,"Alphabets and Symbols are Not Allowed");
            
        }
        else if(evt.getKeyCode()==10)
        {
             jTextFieldpassword.requestFocus(true);
        }
    }//GEN-LAST:event_jTextFieldsupplierContactNo1KeyPressed

    private void jComboBoxgenderSuplier1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxgenderSuplier1KeyPressed
        if(evt.getKeyCode()==10)
       {
          jButtonaddSupplier1.doClick();
       }
    }//GEN-LAST:event_jComboBoxgenderSuplier1KeyPressed

    private void jTextFieldstockID1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldstockID1KeyPressed
       if(evt.getKeyCode()==10)
       {
          jTextFieldstockName1.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldstockID1KeyPressed

    private void jTextFieldstockName1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldstockName1KeyPressed
        if(evt.getKeyCode()==10)
       {
          jTextFieldquantitystock1.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldstockName1KeyPressed

    private void jTextFieldquantitystock1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldquantitystock1KeyPressed
       if(evt.getKeyCode()==10)
       {
          jTextFieldstockprice1.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldquantitystock1KeyPressed

    private void jTextFieldstockprice1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldstockprice1KeyPressed
        if(evt.getKeyCode()==10)
       {
          jTextFieldStockItemName1.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldstockprice1KeyPressed

    private void jTextFieldStockItemName1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldStockItemName1KeyPressed
         if(evt.getKeyCode()==10)
       {
          jButtonAddStock1.doClick();
       }
    }//GEN-LAST:event_jTextFieldStockItemName1KeyPressed

    private void jTextFieldItemID1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldItemID1KeyPressed
        if(evt.getKeyCode()==10)
       {
          jTextFieldItemName1.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldItemID1KeyPressed

    private void jTextFieldItemName1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldItemName1KeyPressed
        if(evt.getKeyCode()==10)
       {
          jTextFieldItemPrice1.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldItemName1KeyPressed

    private void jTextFieldItemPrice1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldItemPrice1KeyPressed
         if(evt.getKeyCode()==10)
       {
         jTextFielditemQuantity1.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldItemPrice1KeyPressed

    private void jTextFielditemQuantity1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFielditemQuantity1KeyPressed
         if(evt.getKeyCode()==10)
       {
         jTextFieldcatagoryIDItem1.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFielditemQuantity1KeyPressed

    private void jTextFieldcatagoryIDItem1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldcatagoryIDItem1KeyPressed
       if(evt.getKeyCode()==10)
       {
         jTextFieldSupplierIDItem1.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldcatagoryIDItem1KeyPressed

    private void jTextFieldSupplierIDItem1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSupplierIDItem1KeyPressed
        if(evt.getKeyCode()==10)
       {
         jButtonAddItem1.doClick();
       }
    }//GEN-LAST:event_jTextFieldSupplierIDItem1KeyPressed

    private void jTextFieldinvoiceNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldinvoiceNoKeyPressed
        if(evt.getKeyCode()==10)
       {
         jTextFieldDate.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldinvoiceNoKeyPressed

    private void jTextFieldDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDateKeyPressed
        if(evt.getKeyCode()==10)
       {
         jTextFieldcustomerNAME.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldDateKeyPressed

    private void jTextFieldcustomerNAMEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldcustomerNAMEKeyPressed
        if(evt.getKeyCode()==10)
       {
         jTextFieldOTEMNAME.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldcustomerNAMEKeyPressed

    private void jTextFieldOTEMNAMEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldOTEMNAMEKeyPressed
        if(evt.getKeyCode()==10)
       {
        jTextFieldPricePERUnit.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldOTEMNAMEKeyPressed

    private void jTextFieldPricePERUnitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPricePERUnitKeyPressed
        if(evt.getKeyCode()==10)
       {
       jTextFieldQuantity.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldPricePERUnitKeyPressed

    private void jTextFieldTotalPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTotalPriceKeyPressed
         if(evt.getKeyCode()==10)
       {
       jButton3.doClick();
       }
    }//GEN-LAST:event_jTextFieldTotalPriceKeyPressed

    private void jTextFieldreparingIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldreparingIDKeyPressed
        if(evt.getKeyCode()==10)
       {
      jTextFieldCUSTOMERNAME.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldreparingIDKeyPressed

    private void jTextFieldCUSTOMERNAMEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCUSTOMERNAMEKeyPressed
        if(evt.getKeyCode()==10)
       {
        jTextFieldCATAGORY.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldCUSTOMERNAMEKeyPressed

    private void jTextFieldCATAGORYKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCATAGORYKeyPressed
        if(evt.getKeyCode()==10)
       {
        jTextAreaREPDETAILS.requestFocus(true);
       }
    }//GEN-LAST:event_jTextFieldCATAGORYKeyPressed

    private void jTextAreaREPDETAILSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaREPDETAILSKeyPressed
       if(evt.getKeyCode()==10)
       {
        jComboBoxreadypending.requestFocus(true);
       }
    }//GEN-LAST:event_jTextAreaREPDETAILSKeyPressed

    private void jComboBoxreadypendingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxreadypendingKeyPressed
        if(evt.getKeyCode()==10)
       {
        jTextFieldprice.requestFocus(true);
       }
    }//GEN-LAST:event_jComboBoxreadypendingKeyPressed

    private void jTextFieldpriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldpriceKeyPressed
        if(evt.getKeyCode()==10)
       {
        jButtonaddreparingCustomer.doClick();
       }
    }//GEN-LAST:event_jTextFieldpriceKeyPressed

    private void jTextFieldEnterCIDCNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEnterCIDCNAMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEnterCIDCNAMEActionPerformed

    private void jComboBoxnormalAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxnormalAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxnormalAdminActionPerformed

    private void jTextFieldpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldpasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldpasswordActionPerformed

    private void jTextFieldcustomerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldcustomerIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldcustomerIDActionPerformed

    private void jTextFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEmailActionPerformed

    private void jTextFieldCustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCustomerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCustomerNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrameFINALPROJECTMOBILESHOP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrameFINALPROJECTMOBILESHOP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrameFINALPROJECTMOBILESHOP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrameFINALPROJECTMOBILESHOP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrameFINALPROJECTMOBILESHOP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonAddItem1;
    private javax.swing.JButton jButtonAddStock1;
    private javax.swing.JButton jButtonBackMenu;
    private javax.swing.JButton jButtonDeleteItem1;
    private javax.swing.JButton jButtonDeleteStock1;
    private javax.swing.JButton jButtonDeleteSupplier1;
    private javax.swing.JButton jButtonLogin;
    private javax.swing.JButton jButtonSEARCHREAPRINGCUSTOMER;
    private javax.swing.JButton jButtonSIGNIN;
    private javax.swing.JButton jButtonSIGNUP;
    private javax.swing.JButton jButtonSIGNUPLOGIN;
    private javax.swing.JButton jButtonUpdateCustomer;
    private javax.swing.JButton jButtonUpdateItem1;
    private javax.swing.JButton jButtonUpdateStock1;
    private javax.swing.JButton jButtonUpdateemployee1;
    private javax.swing.JButton jButtonaddCustomer;
    private javax.swing.JButton jButtonaddSupplier1;
    private javax.swing.JButton jButtonaddcatagory;
    private javax.swing.JButton jButtonaddemployee1;
    private javax.swing.JButton jButtonaddpay;
    private javax.swing.JButton jButtonaddreparingCustomer;
    private javax.swing.JButton jButtonback1;
    private javax.swing.JButton jButtonbackMAINMENU1;
    private javax.swing.JButton jButtonbackMainu1;
    private javax.swing.JButton jButtonbackReparing;
    private javax.swing.JButton jButtonbackmainmenu1;
    private javax.swing.JButton jButtonbackmenu;
    private javax.swing.JButton jButtonbackpay;
    private javax.swing.JButton jButtondeleteCustomer;
    private javax.swing.JButton jButtondeleteEmployee1;
    private javax.swing.JButton jButtondeletecatagory;
    private javax.swing.JButton jButtondeletecustomer;
    private javax.swing.JButton jButtondeletepay;
    private javax.swing.JButton jButtonprintinvoice1;
    private javax.swing.JButton jButtonsearchCatagory;
    private javax.swing.JButton jButtonsearchCustomer;
    private javax.swing.JButton jButtonsearchEmployee1;
    private javax.swing.JButton jButtonsearchItem1;
    private javax.swing.JButton jButtonsearchPay;
    private javax.swing.JButton jButtonsearchStock1;
    private javax.swing.JButton jButtonsearchSupplier1;
    private javax.swing.JButton jButtonupdateSupplier1;
    private javax.swing.JButton jButtonupdatecatagory;
    private javax.swing.JButton jButtonupdatepay;
    private javax.swing.JButton jButtonupdaterepairing;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBoxSearchCatagory;
    private javax.swing.JComboBox jComboBoxSelectNormalAdmin;
    private javax.swing.JComboBox jComboBoxgender;
    private javax.swing.JComboBox jComboBoxgenderSuplier1;
    private javax.swing.JComboBox jComboBoxnormalAdmin;
    private javax.swing.JComboBox jComboBoxreadypending;
    private javax.swing.JComboBox jComboBoxsarchstock1;
    private javax.swing.JComboBox jComboBoxsearchbypay;
    private javax.swing.JComboBox jComboBoxsearchcustomer;
    private javax.swing.JComboBox jComboBoxsearchemployee;
    private javax.swing.JComboBox jComboBoxselectsearchreparing;
    private javax.swing.JComboBox jComboBoxsupplier;
    private javax.swing.JInternalFrame jInternalFrameALLSTOCKRECORD;
    private javax.swing.JInternalFrame jInternalFrameAddCatagory;
    private javax.swing.JInternalFrame jInternalFrameAddCustomer1;
    private javax.swing.JInternalFrame jInternalFrameAddITEM;
    private javax.swing.JInternalFrame jInternalFrameAddStock;
    private javax.swing.JInternalFrame jInternalFrameEmployeeRecord;
    private javax.swing.JInternalFrame jInternalFrameINVOICE;
    private javax.swing.JInternalFrame jInternalFrameMainmenu;
    private javax.swing.JInternalFrame jInternalFrameRepairingcustomer;
    private javax.swing.JInternalFrame jInternalFrameSIGNUP;
    private javax.swing.JInternalFrame jInternalFrameVIEWALLBILLRECORD;
    private javax.swing.JInternalFrame jInternalFrameVIEWITEMRECORD;
    private javax.swing.JInternalFrame jInternalFrameVIEWSUPPLIERRECORD;
    private javax.swing.JInternalFrame jInternalFrameaddEmployee;
    private javax.swing.JInternalFrame jInternalFrameaddSupllier;
    private javax.swing.JInternalFrame jInternalFrameaddpay;
    private javax.swing.JInternalFrame jInternalFrameviewALLCustomer;
    private javax.swing.JInternalFrame jInternalLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel4searchby1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JLabel jLabelEMployeeRecord;
    private javax.swing.JLabel jLabelItemrecord;
    private javax.swing.JLabel jLabelStockRecord;
    private javax.swing.JLabel jLabelSupplierRecord;
    private javax.swing.JLabel jLabeladdCustomer;
    private javax.swing.JLabel jLabelbillRecord;
    private javax.swing.JLabel jLabelcustomerRecord;
    private javax.swing.JLabel jLabelempoloyeePay;
    private javax.swing.JLabel jLabelsearch;
    private javax.swing.JMenu jMenu14;
    private javax.swing.JMenu jMenu15;
    private javax.swing.JMenu jMenu16;
    private javax.swing.JMenu jMenu17;
    private javax.swing.JMenu jMenu18;
    private javax.swing.JMenu jMenu19;
    private javax.swing.JMenu jMenu20;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemAddStock2;
    private javax.swing.JMenuItem jMenuItemAddsuplier2;
    private javax.swing.JMenuItem jMenuItemDetails2;
    private javax.swing.JMenuItem jMenuItemPayDetails4;
    private javax.swing.JMenuItem jMenuItemPayDetails5;
    private javax.swing.JMenuItem jMenuItemREpairingDetails2;
    private javax.swing.JMenuItem jMenuItemaddCustomer2;
    private javax.swing.JMenuItem jMenuItemaddEmployee2;
    private javax.swing.JMenuItem jMenuItemaddcatogory2;
    private javax.swing.JMenuItem jMenuItemcreateBill2;
    private javax.swing.JMenuItem jMenuItemviewEmployeeallrecord7;
    private javax.swing.JMenuItem jMenuItemviewInvoiceallrecord5;
    private javax.swing.JMenuItem jMenuItemviewItemallrecord4;
    private javax.swing.JMenuItem jMenuItemviewStockallrecord3;
    private javax.swing.JMenuItem jMenuItemviewSupplierrallrecord6;
    private javax.swing.JMenuItem jMenuItemviewcustomerallrecord2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTableItemTABLE1;
    private javax.swing.JTable jTableStockTable1;
    private javax.swing.JTable jTableSupplierTable1;
    private javax.swing.JTable jTableVIEWALLBillRECORD;
    private javax.swing.JTable jTableVIEWALLEMPLOYEETABLE;
    private javax.swing.JTable jTableVIEWALLESUPPLIER;
    private javax.swing.JTable jTableVIEWALLITEM;
    private javax.swing.JTable jTableVIEWALLSTOCK;
    private javax.swing.JTable jTableaddCatagoryTable;
    private javax.swing.JTable jTableaddEmployee;
    private javax.swing.JTable jTablecustomerTable;
    private javax.swing.JTable jTablepayTABLE;
    private javax.swing.JTable jTablereparingTABLE;
    private javax.swing.JTable jTableviewALLCustomer;
    private javax.swing.JTextArea jTextAreaAddressSupplier1;
    private javax.swing.JTextArea jTextAreaREPDETAILS;
    private javax.swing.JTextArea jTextAreaaddresscustomer;
    private javax.swing.JTextArea jTextAreaprint;
    private javax.swing.JTextField jTextFieldCATAGORY;
    private javax.swing.JTextField jTextFieldCUSTOMERNAME;
    private javax.swing.JTextField jTextFieldCatagoryID;
    private javax.swing.JTextField jTextFieldCatagoryName;
    private javax.swing.JTextField jTextFieldCity;
    private javax.swing.JTextField jTextFieldContactNo;
    private javax.swing.JTextField jTextFieldCustomerName;
    private javax.swing.JTextField jTextFieldDate;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldEmployeeCity;
    private javax.swing.JTextField jTextFieldEmployeeConatct;
    private javax.swing.JTextField jTextFieldEmployeeEmail;
    private javax.swing.JTextField jTextFieldEmpoyeeName;
    private javax.swing.JTextField jTextFieldEnterCIDCNAME;
    private javax.swing.JTextField jTextFieldEnterName;
    private javax.swing.JTextField jTextFieldItemID1;
    private javax.swing.JTextField jTextFieldItemName1;
    private javax.swing.JTextField jTextFieldItemPrice1;
    private javax.swing.JTextField jTextFieldOTEMNAME;
    private javax.swing.JTextField jTextFieldPricePERUnit;
    private javax.swing.JTextField jTextFieldQuantity;
    private javax.swing.JTextField jTextFieldSlary;
    private javax.swing.JTextField jTextFieldStockItemName1;
    private javax.swing.JTextField jTextFieldSupplierIDItem1;
    private javax.swing.JTextField jTextFieldSupplierName1;
    private javax.swing.JTextField jTextFieldTiltle;
    private javax.swing.JTextField jTextFieldTitle;
    private javax.swing.JTextField jTextFieldTotalPrice;
    private javax.swing.JTextField jTextFieldcatagoryIDItem1;
    private javax.swing.JPasswordField jTextFieldcnfrmPasswordSignup;
    private javax.swing.JTextField jTextFieldcustomerID;
    private javax.swing.JTextField jTextFieldcustomerItemID;
    private javax.swing.JTextField jTextFieldcustomerNAME;
    private javax.swing.JTextField jTextFieldemployeeID;
    private javax.swing.JTextField jTextFieldinvoiceNo;
    private javax.swing.JTextField jTextFielditemQuantity1;
    private javax.swing.JPasswordField jTextFieldpassword;
    private javax.swing.JPasswordField jTextFieldpasswordsignup;
    private javax.swing.JTextField jTextFieldprice;
    private javax.swing.JTextField jTextFieldquantitystock1;
    private javax.swing.JTextField jTextFieldreparingID;
    private javax.swing.JTextField jTextFieldsearchCustomer;
    private javax.swing.JTextField jTextFieldsearchReapring;
    private javax.swing.JTextField jTextFieldsearchby;
    private javax.swing.JTextField jTextFieldsearchcmbofield1;
    private javax.swing.JTextField jTextFieldsearchsuppliercmbo1;
    private javax.swing.JTextField jTextFieldsearchtxt;
    private javax.swing.JTextField jTextFieldsearctxt1;
    private javax.swing.JTextField jTextFieldstockID1;
    private javax.swing.JTextField jTextFieldstockName1;
    private javax.swing.JTextField jTextFieldstockprice1;
    private javax.swing.JTextField jTextFieldsupplierContactNo1;
    private javax.swing.JTextField jTextFieldsupplierID1;
    private javax.swing.JTextField jTextFieldusername;
    // End of variables declaration//GEN-END:variables
}
